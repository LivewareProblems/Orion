{
  "version": 3,
  "sources": ["../../assets/node_modules/topbar/topbar.min.js", "../../assets/js/app.js", "../../assets/node_modules/uplot/dist/uPlot.esm.js", "../../assets/js/chart.js"],
  "sourcesContent": ["/**\n * @license MIT\n * topbar 3.0.0\n * http://buunguyen.github.io/topbar\n * Copyright (c) 2024 Buu Nguyen\n */\n(function(window,document){\"use strict\";function repaint(){canvas.width=window.innerWidth,canvas.height=5*options.barThickness;var ctx=canvas.getContext(\"2d\");ctx.shadowBlur=options.shadowBlur,ctx.shadowColor=options.shadowColor;var stop,lineGradient=ctx.createLinearGradient(0,0,canvas.width,0);for(stop in options.barColors)lineGradient.addColorStop(stop,options.barColors[stop]);ctx.lineWidth=options.barThickness,ctx.beginPath(),ctx.moveTo(0,options.barThickness/2),ctx.lineTo(Math.ceil(currentProgress*canvas.width),options.barThickness/2),ctx.strokeStyle=lineGradient,ctx.stroke()}var canvas,currentProgress,showing,progressTimerId=null,fadeTimerId=null,delayTimerId=null,options={autoRun:!0,barThickness:3,barColors:{0:\"rgba(26,  188, 156, .9)\",\".25\":\"rgba(52,  152, 219, .9)\",\".50\":\"rgba(241, 196, 15,  .9)\",\".75\":\"rgba(230, 126, 34,  .9)\",\"1.0\":\"rgba(211, 84,  0,   .9)\"},shadowBlur:10,shadowColor:\"rgba(0,   0,   0,   .6)\",className:null},topbar={config:function(opts){for(var key in opts)options.hasOwnProperty(key)&&(options[key]=opts[key])},show:function(handler){var type,elem;showing||(handler?delayTimerId=delayTimerId||setTimeout(()=>topbar.show(),handler):(showing=!0,null!==fadeTimerId&&window.cancelAnimationFrame(fadeTimerId),canvas||((elem=(canvas=document.createElement(\"canvas\")).style).position=\"fixed\",elem.top=elem.left=elem.right=elem.margin=elem.padding=0,elem.zIndex=100001,elem.display=\"none\",options.className&&canvas.classList.add(options.className),type=\"resize\",handler=repaint,(elem=window).addEventListener?elem.addEventListener(type,handler,!1):elem.attachEvent?elem.attachEvent(\"on\"+type,handler):elem[\"on\"+type]=handler),canvas.parentElement||document.body.appendChild(canvas),canvas.style.opacity=1,canvas.style.display=\"block\",topbar.progress(0),options.autoRun&&function loop(){progressTimerId=window.requestAnimationFrame(loop),topbar.progress(\"+\"+.05*Math.pow(1-Math.sqrt(currentProgress),2))}()))},progress:function(to){return void 0===to||(\"string\"==typeof to&&(to=(0<=to.indexOf(\"+\")||0<=to.indexOf(\"-\")?currentProgress:0)+parseFloat(to)),currentProgress=1<to?1:to,repaint()),currentProgress},hide:function(){clearTimeout(delayTimerId),delayTimerId=null,showing&&(showing=!1,null!=progressTimerId&&(window.cancelAnimationFrame(progressTimerId),progressTimerId=null),function loop(){return 1<=topbar.progress(\"+.1\")&&(canvas.style.opacity-=.05,canvas.style.opacity<=.05)?(canvas.style.display=\"none\",void(fadeTimerId=null)):void(fadeTimerId=window.requestAnimationFrame(loop))}())}};\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=topbar:\"function\"==typeof define&&define.amd?define(function(){return topbar}):this.topbar=topbar}).call(this,window,document);", "import topbar from \"topbar\"\nimport { ChartData } from \"./chart.js\"\n\nlet socketPath = document.querySelector(\"html\").getAttribute(\"phx-socket\") || \"/live\"\nlet csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\n\nlet Hooks = {\n  ChartData: ChartData\n}\n\nlet liveSocket = new LiveView.LiveSocket(socketPath, Phoenix.Socket, { hooks: Hooks, params: { _csrf_token: csrfToken } })\n\n// Show progress bar on live navigation and form submits\ntopbar.config({ barColors: { 0: \"#29d\" }, shadowColor: \"rgba(0, 0, 0, .3)\" })\nwindow.addEventListener(\"phx:page-loading-start\", info => topbar.show())\nwindow.addEventListener(\"phx:page-loading-stop\", info => topbar.hide())\n\n// connect if there are any LiveViews on the page\nliveSocket.connect()\n\n// expose liveSocket on window for web console debug logs and latency simulation:\n// >> liveSocket.enableDebug()\n// >> liveSocket.enableLatencySim(1000)  // enabled for duration of browser session\n// >> liveSocket.disableLatencySim()\nwindow.liveSocket = liveSocket\n\n", "/**\n* Copyright (c) 2025, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uPlot.js (\u03BCPlot)\n* A small, fast chart for time series, lines, areas, ohlc & bars\n* https://github.com/leeoniya/uPlot (v1.6.32)\n*/\n\nconst FEAT_TIME          = true;\n\nconst pre = \"u-\";\n\nconst UPLOT          =       \"uplot\";\nconst ORI_HZ         = pre + \"hz\";\nconst ORI_VT         = pre + \"vt\";\nconst TITLE          = pre + \"title\";\nconst WRAP           = pre + \"wrap\";\nconst UNDER          = pre + \"under\";\nconst OVER           = pre + \"over\";\nconst AXIS           = pre + \"axis\";\nconst OFF            = pre + \"off\";\nconst SELECT         = pre + \"select\";\nconst CURSOR_X       = pre + \"cursor-x\";\nconst CURSOR_Y       = pre + \"cursor-y\";\nconst CURSOR_PT      = pre + \"cursor-pt\";\nconst LEGEND         = pre + \"legend\";\nconst LEGEND_LIVE    = pre + \"live\";\nconst LEGEND_INLINE  = pre + \"inline\";\nconst LEGEND_SERIES  = pre + \"series\";\nconst LEGEND_MARKER  = pre + \"marker\";\nconst LEGEND_LABEL   = pre + \"label\";\nconst LEGEND_VALUE   = pre + \"value\";\n\nconst WIDTH       = \"width\";\nconst HEIGHT      = \"height\";\nconst TOP         = \"top\";\nconst BOTTOM      = \"bottom\";\nconst LEFT        = \"left\";\nconst RIGHT       = \"right\";\nconst hexBlack    = \"#000\";\nconst transparent = hexBlack + \"0\";\n\nconst mousemove   = \"mousemove\";\nconst mousedown   = \"mousedown\";\nconst mouseup     = \"mouseup\";\nconst mouseenter  = \"mouseenter\";\nconst mouseleave  = \"mouseleave\";\nconst dblclick    = \"dblclick\";\nconst resize      = \"resize\";\nconst scroll      = \"scroll\";\n\nconst change      = \"change\";\nconst dppxchange  = \"dppxchange\";\n\nconst LEGEND_DISP = \"--\";\n\nconst domEnv = typeof window != 'undefined';\n\nconst doc = domEnv ? document  : null;\nconst win = domEnv ? window    : null;\nconst nav = domEnv ? navigator : null;\n\nlet pxRatio;\n\n//export const canHover = domEnv && !win.matchMedia('(hover: none)').matches;\n\nlet query;\n\nfunction setPxRatio() {\n\tlet _pxRatio = devicePixelRatio;\n\n\t// during print preview, Chrome fires off these dppx queries even without changes\n\tif (pxRatio != _pxRatio) {\n\t\tpxRatio = _pxRatio;\n\n\t\tquery && off(change, query, setPxRatio);\n\t\tquery = matchMedia(`(min-resolution: ${pxRatio - 0.001}dppx) and (max-resolution: ${pxRatio + 0.001}dppx)`);\n\t\ton(change, query, setPxRatio);\n\n\t\twin.dispatchEvent(new CustomEvent(dppxchange));\n\t}\n}\n\nfunction addClass(el, c) {\n\tif (c != null) {\n\t\tlet cl = el.classList;\n\t\t!cl.contains(c) && cl.add(c);\n\t}\n}\n\nfunction remClass(el, c) {\n\tlet cl = el.classList;\n\tcl.contains(c) && cl.remove(c);\n}\n\nfunction setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nfunction placeTag(tag, cls, targ, refEl) {\n\tlet el = doc.createElement(tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nfunction placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nconst xformCache = new WeakMap();\n\nfunction elTrans(el, xPos, yPos, xMax, yMax) {\n\tlet xform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n\tlet xformOld = xformCache.get(el);\n\n\tif (xform != xformOld) {\n\t\tel.style.transform = xform;\n\t\txformCache.set(el, xform);\n\n\t\tif (xPos < 0 || yPos < 0 || xPos > xMax || yPos > yMax)\n\t\t\taddClass(el, OFF);\n\t\telse\n\t\t\tremClass(el, OFF);\n\t}\n}\n\nconst colorCache = new WeakMap();\n\nfunction elColor(el, background, borderColor) {\n\tlet newColor = background + borderColor;\n\tlet oldColor = colorCache.get(el);\n\n\tif (newColor != oldColor) {\n\t\tcolorCache.set(el, newColor);\n\t\tel.style.background = background;\n\t\tel.style.borderColor = borderColor;\n\t}\n}\n\nconst sizeCache = new WeakMap();\n\nfunction elSize(el, newWid, newHgt, centered) {\n\tlet newSize = newWid + \"\" + newHgt;\n\tlet oldSize = sizeCache.get(el);\n\n\tif (newSize != oldSize) {\n\t\tsizeCache.set(el, newSize);\n\t\tel.style.height = newHgt + \"px\";\n\t\tel.style.width = newWid + \"px\";\n\t\tel.style.marginLeft = centered ? -newWid/2 + \"px\" : 0;\n\t\tel.style.marginTop = centered ? -newHgt/2 + \"px\" : 0;\n\t}\n}\n\nconst evOpts = {passive: true};\nconst evOpts2 = {...evOpts, capture: true};\n\nfunction on(ev, el, cb, capt) {\n\tel.addEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\nfunction off(ev, el, cb, capt) {\n\tel.removeEventListener(ev, cb, evOpts);\n}\n\ndomEnv && setPxRatio();\n\n// binary search for index of closest value\nfunction closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nfunction makeIndexOfs(predicate) {\n\t let indexOfs = (data, _i0, _i1) => {\n\t\tlet i0 = -1;\n\t\tlet i1 = -1;\n\n\t\tfor (let i = _i0; i <= _i1; i++) {\n\t\t\tif (predicate(data[i])) {\n\t\t\t\ti0 = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = _i1; i >= _i0; i--) {\n\t\t\tif (predicate(data[i])) {\n\t\t\t\ti1 = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn [i0, i1];\n\t };\n\n\t return indexOfs;\n}\n\nconst notNullish = v => v != null;\nconst isPositive = v => v != null && v > 0;\n\nconst nonNullIdxs = makeIndexOfs(notNullish);\nconst positiveIdxs = makeIndexOfs(isPositive);\n\nfunction getMinMax(data, _i0, _i1, sorted = 0, log = false) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet getEdgeIdxs = log ? positiveIdxs : nonNullIdxs;\n\tlet predicate = log ? isPositive : notNullish;\n\n\t[_i0, _i1] = getEdgeIdxs(data, _i0, _i1);\n\n\tlet _min = data[_i0];\n\tlet _max = data[_i0];\n\n\tif (_i0 > -1) {\n\t\tif (sorted == 1) {\n\t\t\t_min = data[_i0];\n\t\t\t_max = data[_i1];\n\t\t}\n\t\telse if (sorted == -1) {\n\t\t\t_min = data[_i1];\n\t\t\t_max = data[_i0];\n\t\t}\n\t\telse {\n\t\t\tfor (let i = _i0; i <= _i1; i++) {\n\t\t\t\tlet v = data[i];\n\n\t\t\t\tif (predicate(v)) {\n\t\t\t\t\tif (v < _min)\n\t\t\t\t\t\t_min = v;\n\t\t\t\t\telse if (v > _max)\n\t\t\t\t\t\t_max = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [_min ?? inf, _max ?? -inf]; // todo: fix to return nulls\n}\n\nfunction rangeLog(min, max, base, fullMags) {\n\tlet minSign = sign(min);\n\tlet maxSign = sign(max);\n\n\tif (min == max) {\n\t\tif (minSign == -1) {\n\t\t\tmin *= base;\n\t\t\tmax /= base;\n\t\t}\n\t\telse {\n\t\t\tmin /= base;\n\t\t\tmax *= base;\n\t\t}\n\t}\n\n\tlet logFn = base == 10 ? log10 : log2;\n\n\tlet growMinAbs = minSign == 1 ? floor : ceil;\n\tlet growMaxAbs = maxSign == 1 ? ceil : floor;\n\n\tlet minExp = growMinAbs(logFn(abs(min)));\n\tlet maxExp = growMaxAbs(logFn(abs(max)));\n\n\tlet minIncr = pow(base, minExp);\n\tlet maxIncr = pow(base, maxExp);\n\n\t// fix values like Math.pow(10, -5) === 0.000009999999999999999\n\tif (base == 10) {\n\t\tif (minExp < 0)\n\t\t\tminIncr = roundDec(minIncr, -minExp);\n\t\tif (maxExp < 0)\n\t\t\tmaxIncr = roundDec(maxIncr, -maxExp);\n\t}\n\n\tif (fullMags || base == 2) {\n\t\tmin = minIncr * minSign;\n\t\tmax = maxIncr * maxSign;\n\t}\n\telse {\n\t\tmin = incrRoundDn(min, minIncr);\n\t\tmax = incrRoundUp(max, maxIncr);\n\t}\n\n\treturn [min, max];\n}\n\nfunction rangeAsinh(min, max, base, fullMags) {\n\tlet minMax = rangeLog(min, max, base, fullMags);\n\n\tif (min == 0)\n\t\tminMax[0] = 0;\n\n\tif (max == 0)\n\t\tminMax[1] = 0;\n\n\treturn minMax;\n}\n\nconst rangePad = 0.1;\n\nconst autoRangePart = {\n\tmode: 3,\n\tpad: rangePad,\n};\n\nconst _eqRangePart = {\n\tpad:  0,\n\tsoft: null,\n\tmode: 0,\n};\n\nconst _eqRange = {\n\tmin: _eqRangePart,\n\tmax: _eqRangePart,\n};\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction rangeNum(_min, _max, mult, extra) {\n\tif (isObj(mult))\n\t\treturn _rangeNum(_min, _max, mult);\n\n\t_eqRangePart.pad  = mult;\n\t_eqRangePart.soft = extra ? 0 : null;\n\t_eqRangePart.mode = extra ? 3 : 0;\n\n\treturn _rangeNum(_min, _max, _eqRange);\n}\n\n// nullish coalesce\nfunction ifNull(lh, rh) {\n\treturn lh == null ? rh : lh;\n}\n\n// checks if given index range in an array contains a non-null value\n// aka a range-bounded Array.some()\nfunction hasData(data, idx0, idx1) {\n\tidx0 = ifNull(idx0, 0);\n\tidx1 = ifNull(idx1, data.length - 1);\n\n\twhile (idx0 <= idx1) {\n\t\tif (data[idx0] != null)\n\t\t\treturn true;\n\t\tidx0++;\n\t}\n\n\treturn false;\n}\n\nfunction _rangeNum(_min, _max, cfg) {\n\tlet cmin = cfg.min;\n\tlet cmax = cfg.max;\n\n\tlet padMin = ifNull(cmin.pad, 0);\n\tlet padMax = ifNull(cmax.pad, 0);\n\n\tlet hardMin = ifNull(cmin.hard, -inf);\n\tlet hardMax = ifNull(cmax.hard,  inf);\n\n\tlet softMin = ifNull(cmin.soft,  inf);\n\tlet softMax = ifNull(cmax.soft, -inf);\n\n\tlet softMinMode = ifNull(cmin.mode, 0);\n\tlet softMaxMode = ifNull(cmax.mode, 0);\n\n\tlet delta = _max - _min;\n\tlet deltaMag = log10(delta);\n\n\tlet scalarMax = max(abs(_min), abs(_max));\n\tlet scalarMag = log10(scalarMax);\n\n\tlet scalarMagDelta = abs(scalarMag - deltaMag);\n\n\t// this handles situations like 89.7, 89.69999999999999\n\t// by assuming 0.001x deltas are precision errors\n//\tif (delta > 0 && delta < abs(_max) / 1e3)\n//\t\tdelta = 0;\n\n\t// treat data as flat if delta is less than 1e-24\n\t// or range is 11+ orders of magnitude below raw values, e.g. 99999999.99999996 - 100000000.00000004\n\tif (delta < 1e-24 || scalarMagDelta > 10) {\n\t\tdelta = 0;\n\n\t\t// if soft mode is 2 and all vals are flat at 0, avoid the 0.1 * 1e3 fallback\n\t\t// this prevents 0,0,0 from ranging to -100,100 when softMin/softMax are -1,1\n\t\tif (_min == 0 || _max == 0) {\n\t\t\tdelta = 1e-24;\n\n\t\t\tif (softMinMode == 2 && softMin != inf)\n\t\t\t\tpadMin = 0;\n\n\t\t\tif (softMaxMode == 2 && softMax != -inf)\n\t\t\t\tpadMax = 0;\n\t\t}\n\t}\n\n\tlet nonZeroDelta = delta || scalarMax || 1e3;\n\tlet mag          = log10(nonZeroDelta);\n\tlet base         = pow(10, floor(mag));\n\n\tlet _padMin  = nonZeroDelta * (delta == 0 ? (_min == 0 ? .1 : 1) : padMin);\n\tlet _newMin  = roundDec(incrRoundDn(_min - _padMin, base/10), 24);\n\tlet _softMin = _min >= softMin && (softMinMode == 1 || softMinMode == 3 && _newMin <= softMin || softMinMode == 2 && _newMin >= softMin) ? softMin : inf;\n\tlet minLim   = max(hardMin, _newMin < _softMin && _min >= _softMin ? _softMin : min(_softMin, _newMin));\n\n\tlet _padMax  = nonZeroDelta * (delta == 0 ? (_max == 0 ? .1 : 1) : padMax);\n\tlet _newMax  = roundDec(incrRoundUp(_max + _padMax, base/10), 24);\n\tlet _softMax = _max <= softMax && (softMaxMode == 1 || softMaxMode == 3 && _newMax >= softMax || softMaxMode == 2 && _newMax <= softMax) ? softMax : -inf;\n\tlet maxLim   = min(hardMax, _newMax > _softMax && _max <= _softMax ? _softMax : max(_softMax, _newMax));\n\n\tif (minLim == maxLim && minLim == 0)\n\t\tmaxLim = 100;\n\n\treturn [minLim, maxLim];\n}\n\n// alternative: https://stackoverflow.com/a/2254896\nconst numFormatter = new Intl.NumberFormat(domEnv ? nav.language : 'en-US');\nconst fmtNum = val => numFormatter.format(val);\n\nconst M = Math;\n\nconst PI = M.PI;\nconst abs = M.abs;\nconst floor = M.floor;\nconst round = M.round;\nconst ceil = M.ceil;\nconst min = M.min;\nconst max = M.max;\nconst pow = M.pow;\nconst sign = M.sign;\nconst log10 = M.log10;\nconst log2 = M.log2;\n// TODO: seems like this needs to match asinh impl if the passed v is tweaked?\nconst sinh =  (v, linthresh = 1) => M.sinh(v) * linthresh;\nconst asinh = (v, linthresh = 1) => M.asinh(v / linthresh);\n\nconst inf = Infinity;\n\nfunction numIntDigits(x) {\n\treturn (log10((x ^ (x >> 31)) - (x >> 31)) | 0) + 1;\n}\n\nfunction clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nfunction isFn(v) {\n\treturn typeof v == \"function\";\n}\n\nfunction fnOrSelf(v) {\n\treturn isFn(v) ? v : () => v;\n}\n\nconst noop = () => {};\n\n// note: these identity fns may get deoptimized if reused for different arg types\n// a TS version would enforce they stay monotyped and require making variants\nconst retArg0 = _0 => _0;\n\nconst retArg1 = (_0, _1) => _1;\n\nconst retNull = _ => null;\n\nconst retTrue = _ => true;\n\nconst retEq = (a, b) => a == b;\n\nconst regex6 = /\\.\\d*?(?=9{6,}|0{6,})/gm;\n\n// e.g. 17999.204999999998 -> 17999.205\nconst fixFloat = val => {\n\tif (isInt(val) || fixedDec.has(val))\n\t\treturn val;\n\n\tconst str = `${val}`;\n\n\tconst match = str.match(regex6);\n\n\tif (match == null)\n\t\treturn val;\n\n\tlet len = match[0].length - 1;\n\n\t// e.g. 1.0000000000000001e-24\n\tif (str.indexOf('e-') != -1) {\n\t\tlet [num, exp] = str.split('e');\n\t\treturn +`${fixFloat(num)}e${exp}`;\n\t}\n\n\treturn roundDec(val, len);\n};\n\nfunction incrRound(num, incr) {\n\treturn fixFloat(roundDec(fixFloat(num/incr))*incr);\n}\n\nfunction incrRoundUp(num, incr) {\n\treturn fixFloat(ceil(fixFloat(num/incr))*incr);\n}\n\nfunction incrRoundDn(num, incr) {\n\treturn fixFloat(floor(fixFloat(num/incr))*incr);\n}\n\n// https://stackoverflow.com/a/48764436\n// rounds half away from zero\nfunction roundDec(val, dec = 0) {\n\tif (isInt(val))\n\t\treturn val;\n//\telse if (dec == 0)\n//\t\treturn round(val);\n\n\tlet p = 10 ** dec;\n\tlet n = (val * p) * (1 + Number.EPSILON);\n\treturn round(n) / p;\n}\n\nconst fixedDec = new Map();\n\nfunction guessDec(num) {\n\treturn ((\"\"+num).split(\".\")[1] || \"\").length;\n}\n\nfunction genIncrs(base, minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tlet multDec = mults.map(guessDec);\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tlet expa = abs(exp);\n\t\tlet mag = roundDec(pow(base, exp), expa);\n\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet _incr = base == 10 ? +`${mults[i]}e${exp}` : mults[i] * mag;\n\t\t\tlet dec = (exp >= 0 ? 0 : expa) + (exp >= multDec[i] ? 0 : multDec[i]);\n\t\t\tlet incr = base == 10 ? _incr : roundDec(_incr, dec);\n\t\t\tincrs.push(incr);\n\t\t\tfixedDec.set(incr, dec);\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\n//export const assign = Object.assign;\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\n\nconst nullNullTuple = [null, null];\n\nconst isArr = Array.isArray;\nconst isInt = Number.isInteger;\nconst isUndef = v => v === void 0;\n\nfunction isStr(v) {\n\treturn typeof v == 'string';\n}\n\nfunction isObj(v) {\n\tlet is = false;\n\n\tif (v != null) {\n\t\tlet c = v.constructor;\n\t\tis = c == null || c == Object;\n\t}\n\n\treturn is;\n}\n\nfunction fastIsObj(v) {\n\treturn v != null && typeof v == 'object';\n}\n\nconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\nconst __proto__ = \"__proto__\";\n\nfunction copy(o, _isObj = isObj) {\n\tlet out;\n\n\tif (isArr(o)) {\n\t\tlet val = o.find(v => v != null);\n\n\t\tif (isArr(val) || _isObj(val)) {\n\t\t\tout = Array(o.length);\n\t\t\tfor (let i = 0; i < o.length; i++)\n\t\t\t\tout[i] = copy(o[i], _isObj);\n\t\t}\n\t\telse\n\t\t\tout = o.slice();\n\t}\n\telse if (o instanceof TypedArray) // also (ArrayBuffer.isView(o) && !(o instanceof DataView))\n\t\tout = o.slice();\n\telse if (_isObj(o)) {\n\t\tout = {};\n\t\tfor (let k in o) {\n\t\t\tif (k != __proto__)\n\t\t\t\tout[k] = copy(o[k], _isObj);\n\t\t}\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nfunction assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (key != __proto__) {\n\t\t\t\tif (isObj(targ[key]))\n\t\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\t\telse\n\t\t\t\t\ttarg[key] = copy(src[key]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn targ;\n}\n\n// nullModes\nconst NULL_REMOVE = 0;  // nulls are converted to undefined (e.g. for spanGaps: true)\nconst NULL_RETAIN = 1;  // nulls are retained, with alignment artifacts set to undefined (default)\nconst NULL_EXPAND = 2;  // nulls are expanded to include any adjacent alignment artifacts\n\n// sets undefined values to nulls when adjacent to existing nulls (minesweeper)\nfunction nullExpand(yVals, nullIdxs, alignedLen) {\n\tfor (let i = 0, xi, lastNullIdx = -1; i < nullIdxs.length; i++) {\n\t\tlet nullIdx = nullIdxs[i];\n\n\t\tif (nullIdx > lastNullIdx) {\n\t\t\txi = nullIdx - 1;\n\t\t\twhile (xi >= 0 && yVals[xi] == null)\n\t\t\t\tyVals[xi--] = null;\n\n\t\t\txi = nullIdx + 1;\n\t\t\twhile (xi < alignedLen && yVals[xi] == null)\n\t\t\t\tyVals[lastNullIdx = xi++] = null;\n\t\t}\n\t}\n}\n\n// nullModes is a tables-matched array indicating how to treat nulls in each series\n// output is sorted ASC on the joined field (table[0]) and duplicate join values are collapsed\nfunction join(tables, nullModes) {\n\tif (allHeadersSame(tables)) {\n\t//\tconsole.log('cheap join!');\n\n\t\tlet table = tables[0].slice();\n\n\t\tfor (let i = 1; i < tables.length; i++)\n\t\t\ttable.push(...tables[i].slice(1));\n\n\t\tif (!isAsc(table[0]))\n\t\t\ttable = sortCols(table);\n\n\t\treturn table;\n\t}\n\n\tlet xVals = new Set();\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\t\tlet len = xs.length;\n\n\t\tfor (let i = 0; i < len; i++)\n\t\t\txVals.add(xs[i]);\n\t}\n\n\tlet data = [Array.from(xVals).sort((a, b) => a - b)];\n\n\tlet alignedLen = data[0].length;\n\n\tlet xIdxs = new Map();\n\n\tfor (let i = 0; i < alignedLen; i++)\n\t\txIdxs.set(data[0][i], i);\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\n\t\tfor (let si = 1; si < t.length; si++) {\n\t\t\tlet ys = t[si];\n\n\t\t\tlet yVals = Array(alignedLen).fill(undefined);\n\n\t\t\tlet nullMode = nullModes ? nullModes[ti][si] : NULL_RETAIN;\n\n\t\t\tlet nullIdxs = [];\n\n\t\t\tfor (let i = 0; i < ys.length; i++) {\n\t\t\t\tlet yVal = ys[i];\n\t\t\t\tlet alignedIdx = xIdxs.get(xs[i]);\n\n\t\t\t\tif (yVal === null) {\n\t\t\t\t\tif (nullMode != NULL_REMOVE) {\n\t\t\t\t\t\tyVals[alignedIdx] = yVal;\n\n\t\t\t\t\t\tif (nullMode == NULL_EXPAND)\n\t\t\t\t\t\t\tnullIdxs.push(alignedIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tyVals[alignedIdx] = yVal;\n\t\t\t}\n\n\t\t\tnullExpand(yVals, nullIdxs, alignedLen);\n\n\t\t\tdata.push(yVals);\n\t\t}\n\t}\n\n\treturn data;\n}\n\nconst microTask = typeof queueMicrotask == \"undefined\" ? fn => Promise.resolve().then(fn) : queueMicrotask;\n\n// TODO: https://github.com/dy/sort-ids (~2x faster for 1e5+ arrays)\nfunction sortCols(table) {\n\tlet head = table[0];\n\tlet rlen = head.length;\n\n\tlet idxs = Array(rlen);\n\tfor (let i = 0; i < idxs.length; i++)\n\t\tidxs[i] = i;\n\n\tidxs.sort((i0, i1) => head[i0] - head[i1]);\n\n\tlet table2 = [];\n\tfor (let i = 0; i < table.length; i++) {\n\t\tlet row = table[i];\n\t\tlet row2 = Array(rlen);\n\n\t\tfor (let j = 0; j < rlen; j++)\n\t\t\trow2[j] = row[idxs[j]];\n\n\t\ttable2.push(row2);\n\t}\n\n\treturn table2;\n}\n\n// test if we can do cheap join (all join fields same)\nfunction allHeadersSame(tables) {\n\tlet vals0 = tables[0][0];\n\tlet len0 = vals0.length;\n\n\tfor (let i = 1; i < tables.length; i++) {\n\t\tlet vals1 = tables[i][0];\n\n\t\tif (vals1.length != len0)\n\t\t\treturn false;\n\n\t\tif (vals1 != vals0) {\n\t\t\tfor (let j = 0; j < len0; j++) {\n\t\t\t\tif (vals1[j] != vals0[j])\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isAsc(vals, samples = 100) {\n\tconst len = vals.length;\n\n\t// empty or single value\n\tif (len <= 1)\n\t\treturn true;\n\n\t// skip leading & trailing nullish\n\tlet firstIdx = 0;\n\tlet lastIdx = len - 1;\n\n\twhile (firstIdx <= lastIdx && vals[firstIdx] == null)\n\t\tfirstIdx++;\n\n\twhile (lastIdx >= firstIdx && vals[lastIdx] == null)\n\t\tlastIdx--;\n\n\t// all nullish or one value surrounded by nullish\n\tif (lastIdx <= firstIdx)\n\t\treturn true;\n\n\tconst stride = max(1, floor((lastIdx - firstIdx + 1) / samples));\n\n\tfor (let prevVal = vals[firstIdx], i = firstIdx + stride; i <= lastIdx; i += stride) {\n\t\tconst v = vals[i];\n\n\t\tif (v != null) {\n\t\t\tif (v <= prevVal)\n\t\t\t\treturn false;\n\n\t\t\tprevVal = v;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 = days.map(slice3);\n\nconst months3 = months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d.getFullYear(),\n\t// 19\n\tYY:\t\td => (d.getFullYear()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d.getMonth()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d.getMonth()],\n\t// 07\n\tMM:\t\td => zeroPad2(d.getMonth()+1),\n\t// 7\n\tM:\t\td => d.getMonth()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d.getDate()),\n\t// 9\n\tD:\t\td => d.getDate(),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d.getDay()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d.getDay()],\n\t// 03\n\tHH:\t\td => zeroPad2(d.getHours()),\n\t// 3\n\tH:\t\td => d.getHours(),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d.getHours(); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d.getHours() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d.getHours() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d.getHours() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d.getMinutes()),\n\t// 9\n\tm:\t\td => d.getMinutes(),\n\t// 09\n\tss:\t\td => zeroPad2(d.getSeconds()),\n\t// 9\n\ts:\t\td => d.getSeconds(),\n\t// 374\n\tfff:\td => zeroPad3(d.getMilliseconds()),\n};\n\nfunction fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\nconst localTz = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nfunction tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'UTC' || tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse if (tz == localTz)\n\t\tdate2 = date;\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date.getMilliseconds());\n\t}\n\n\treturn date2;\n}\n\n//export const series = [];\n\n// default formatters:\n\nconst onlyWhole = v => v % 1 == 0;\n\nconst allMults = [1,2,2.5,5];\n\n// ...0.01, 0.02, 0.025, 0.05, 0.1, 0.2, 0.25, 0.5\nconst decIncrs = genIncrs(10, -32, 0, allMults);\n\n// 1, 2, 2.5, 5, 10, 20, 25, 50...\nconst oneIncrs = genIncrs(10, 0, 32, allMults);\n\n// 1, 2,      5, 10, 20, 25, 50...\nconst wholeIncrs = oneIncrs.filter(onlyWhole);\n\nconst numIncrs = decIncrs.concat(oneIncrs);\n\nconst NL = \"\\n\";\n\nconst yyyy    = \"{YYYY}\";\nconst NLyyyy  = NL + yyyy;\nconst md      = \"{M}/{D}\";\nconst NLmd    = NL + md;\nconst NLmdyy  = NLmd + \"/{YY}\";\n\nconst aa      = \"{aa}\";\nconst hmm     = \"{h}:{mm}\";\nconst hmmaa   = hmm + aa;\nconst NLhmmaa = NL + hmmaa;\nconst ss      = \":{ss}\";\n\nconst _ = null;\n\nfunction genTimeStuffs(ms) {\n\tlet\ts  = ms * 1e3,\n\t\tm  = s  * 60,\n\t\th  = m  * 60,\n\t\td  = h  * 24,\n\t\tmo = d  * 30,\n\t\ty  = d  * 365;\n\n\t// min of 1e-3 prevents setting a temporal x ticks too small since Date objects cannot advance ticks smaller than 1ms\n\tlet subSecIncrs = ms == 1 ? genIncrs(10, 0, 3, allMults).filter(onlyWhole) : genIncrs(10, -3, 0, allMults);\n\n\tlet timeIncrs = subSecIncrs.concat([\n\t\t// minute divisors (# of secs)\n\t\ts,\n\t\ts * 5,\n\t\ts * 10,\n\t\ts * 15,\n\t\ts * 30,\n\t\t// hour divisors (# of mins)\n\t\tm,\n\t\tm * 5,\n\t\tm * 10,\n\t\tm * 15,\n\t\tm * 30,\n\t\t// day divisors (# of hrs)\n\t\th,\n\t\th * 2,\n\t\th * 3,\n\t\th * 4,\n\t\th * 6,\n\t\th * 8,\n\t\th * 12,\n\t\t// month divisors TODO: need more?\n\t\td,\n\t\td * 2,\n\t\td * 3,\n\t\td * 4,\n\t\td * 5,\n\t\td * 6,\n\t\td * 7,\n\t\td * 8,\n\t\td * 9,\n\t\td * 10,\n\t\td * 15,\n\t\t// year divisors (# months, approx)\n\t\tmo,\n\t\tmo * 2,\n\t\tmo * 3,\n\t\tmo * 4,\n\t\tmo * 6,\n\t\t// century divisors\n\t\ty,\n\t\ty * 2,\n\t\ty * 5,\n\t\ty * 10,\n\t\ty * 25,\n\t\ty * 50,\n\t\ty * 100,\n\t]);\n\n\t// [0]:   minimum num secs in the tick incr\n\t// [1]:   default tick format\n\t// [2-7]: rollover tick formats\n\t// [8]:   mode: 0: replace [1] -> [2-7], 1: concat [1] + [2-7]\n\tconst _timeAxisStamps = [\n\t//   tick incr    default          year                    month   day                   hour    min       sec   mode\n\t\t[y,           yyyy,            _,                      _,      _,                    _,      _,        _,       1],\n\t\t[d * 28,      \"{MMM}\",         NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[d,           md,              NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[h,           \"{h}\" + aa,      NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[m,           hmmaa,           NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[s,           ss,              NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t\t[ms,          ss + \".{fff}\",   NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t];\n\n\t// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n\t// https://www.timeanddate.com/time/dst/\n\t// https://www.timeanddate.com/time/dst/2019.html\n\t// https://www.epochconverter.com/timezones\n\tfunction timeAxisSplits(tzDate) {\n\t\treturn (self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace) => {\n\t\t\tlet splits = [];\n\t\t\tlet isYr = foundIncr >= y;\n\t\t\tlet isMo = foundIncr >= mo && foundIncr < y;\n\n\t\t\t// get the timezone-adjusted date\n\t\t\tlet minDate = tzDate(scaleMin);\n\t\t\tlet minDateTs = roundDec(minDate * ms, 3);\n\n\t\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\t\tlet minMin = mkDate(minDate.getFullYear(), isYr ? 0 : minDate.getMonth(), isMo || isYr ? 1 : minDate.getDate());\n\t\t\tlet minMinTs = roundDec(minMin * ms, 3);\n\n\t\t\tif (isMo || isYr) {\n\t\t\t\tlet moIncr = isMo ? foundIncr / mo : 0;\n\t\t\t\tlet yrIncr = isYr ? foundIncr / y  : 0;\n\t\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\t\tlet split = minDateTs == minMinTs ? minDateTs : roundDec(mkDate(minMin.getFullYear() + yrIncr, minMin.getMonth() + moIncr, 1) * ms, 3);\n\t\t\t\tlet splitDate = new Date(round(split / ms));\n\t\t\t\tlet baseYear = splitDate.getFullYear();\n\t\t\t\tlet baseMonth = splitDate.getMonth();\n\n\t\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\t\tlet next = mkDate(baseYear + yrIncr * i, baseMonth + moIncr * i, 1);\n\t\t\t\t\tlet offs = next - tzDate(roundDec(next * ms, 3));\n\n\t\t\t\t\tsplit = roundDec((+next + offs) * ms, 3);\n\n\t\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet incr0 = foundIncr >= d ? d : foundIncr;\n\t\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\t\tsplits.push(split);\n\n\t\t\t\tlet date0 = tzDate(split);\n\n\t\t\t\tlet prevHour = date0.getHours() + (date0.getMinutes() / m) + (date0.getSeconds() / h);\n\t\t\t\tlet incrHours = foundIncr / h;\n\n\t\t\t\tlet minSpace = self.axes[axisIdx]._space;\n\t\t\t\tlet pctSpace = foundSpace / minSpace;\n\n\t\t\t\twhile (1) {\n\t\t\t\t\tsplit = roundDec(split + foundIncr, ms == 1 ? 0 : 3);\n\n\t\t\t\t\tif (split > scaleMax)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tif (incrHours > 1) {\n\t\t\t\t\t\tlet expectedHour = floor(roundDec(prevHour + incrHours, 6)) % 24;\n\t\t\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\t\t\tif (dstShift > 1)\n\t\t\t\t\t\t\tdstShift = -1;\n\n\t\t\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\t\t\tlet pctIncr = roundDec((split - prevSplit) / foundIncr, 3);\n\n\t\t\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn splits;\n\t\t}\n\t}\n\n\treturn [\n\t\ttimeIncrs,\n\t\t_timeAxisStamps,\n\t\ttimeAxisSplits,\n\t];\n}\n\nconst [ timeIncrsMs, _timeAxisStampsMs, timeAxisSplitsMs ] = genTimeStuffs(1);\nconst [ timeIncrsS,  _timeAxisStampsS,  timeAxisSplitsS  ] = genTimeStuffs(1e-3);\n\n// base 2\ngenIncrs(2, -53, 53, [1]);\n\n/*\nconsole.log({\n\tdecIncrs,\n\toneIncrs,\n\twholeIncrs,\n\tnumIncrs,\n\ttimeIncrs,\n\tfixedDec,\n});\n*/\n\nfunction timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => s.map((v, i) =>\n\t\ti == 0 || i == 8 || v == null ? v : fmtDate(i == 1 || s[8] == 0 ? v : s[1] + v)\n\t));\n}\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nfunction timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => {\n\t\tlet s = stamps.find(s => foundIncr >= s[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear;\n\t\tlet prevMnth;\n\t\tlet prevDate;\n\t\tlet prevHour;\n\t\tlet prevMins;\n\t\tlet prevSecs;\n\n\t\treturn splits.map(split => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date.getFullYear();\n\t\t\tlet newMnth = date.getMonth();\n\t\t\tlet newDate = date.getDate();\n\t\t\tlet newHour = date.getHours();\n\t\t\tlet newMins = date.getMinutes();\n\t\t\tlet newSecs = date.getSeconds();\n\n\t\t\tlet stamp = (\n\t\t\t\tnewYear != prevYear && s[2] ||\n\t\t\t\tnewMnth != prevMnth && s[3] ||\n\t\t\t\tnewDate != prevDate && s[4] ||\n\t\t\t\tnewHour != prevHour && s[5] ||\n\t\t\t\tnewMins != prevMins && s[6] ||\n\t\t\t\tnewSecs != prevSecs && s[7] ||\n\t\t\t\t                       s[1]\n\t\t\t);\n\n\t\t\tprevYear = newYear;\n\t\t\tprevMnth = newMnth;\n\t\t\tprevDate = newDate;\n\t\t\tprevHour = newHour;\n\t\t\tprevMins = newMins;\n\t\t\tprevSecs = newSecs;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\n// for when axis.values is defined as a static fmtDate template string\nfunction timeAxisVal(tzDate, dateTpl) {\n\tlet stamp = fmtDate(dateTpl);\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => splits.map(split => stamp(tzDate(split)));\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\nfunction timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n}\nconst _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nfunction timeSeriesVal(tzDate, stamp) {\n\treturn (self, val, seriesIdx, dataIdx) => dataIdx == null ? LEGEND_DISP : stamp(tzDate(val));\n}\n\nfunction legendStroke(self, seriesIdx) {\n\tlet s = self.series[seriesIdx];\n\treturn s.width ? s.stroke(self, seriesIdx) : s.points.width ? s.points.stroke(self, seriesIdx) : null;\n}\n\nfunction legendFill(self, seriesIdx) {\n\treturn self.series[seriesIdx].fill(self, seriesIdx);\n}\n\nconst legendOpts = {\n\tshow: true,\n\tlive: true,\n\tisolate: false,\n\tmount: noop,\n\tmarkers: {\n\t\tshow: true,\n\t\twidth: 2,\n\t\tstroke: legendStroke,\n\t\tfill: legendFill,\n\t\tdash: \"solid\",\n\t},\n\tidx: null,\n\tidxs: null,\n\tvalues: [],\n};\n\nfunction cursorPointShow(self, si) {\n\tlet o = self.cursor.points;\n\n\tlet pt = placeDiv();\n\n\tlet size = o.size(self, si);\n\tsetStylePx(pt, WIDTH, size);\n\tsetStylePx(pt, HEIGHT, size);\n\n\tlet mar = size / -2;\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\tlet width = o.width(self, si, size);\n\twidth && setStylePx(pt, \"borderWidth\", width);\n\n\treturn pt;\n}\n\nfunction cursorPointFill(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._fill || sp._stroke;\n}\n\nfunction cursorPointStroke(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._stroke || sp._fill;\n}\n\nfunction cursorPointSize(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp.size;\n}\n\nconst moveTuple = [0,0];\n\nfunction cursorMove(self, mouseLeft1, mouseTop1) {\n\tmoveTuple[0] = mouseLeft1;\n\tmoveTuple[1] = mouseTop1;\n\treturn moveTuple;\n}\n\nfunction filtBtn0(self, targ, handle, onlyTarg = true) {\n\treturn e => {\n\t\te.button == 0 && (!onlyTarg || e.target == targ) && handle(e);\n\t};\n}\n\nfunction filtTarg(self, targ, handle, onlyTarg = true) {\n\treturn e => {\n\t\t(!onlyTarg || e.target == targ) && handle(e);\n\t};\n}\n\nconst cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tmove: cursorMove,\n\tpoints: {\n\t\tone:    false,\n\t\tshow:   cursorPointShow,\n\t\tsize:   cursorPointSize,\n\t\twidth:  0,\n\t\tstroke: cursorPointStroke,\n\t\tfill:   cursorPointFill,\n\t},\n\n\tbind: {\n\t\tmousedown:   filtBtn0,\n\t\tmouseup:     filtBtn0,\n\t\tclick:       filtBtn0, // legend clicks, not .u-over clicks\n\t\tdblclick:    filtBtn0,\n\n\t\tmousemove:   filtTarg,\n\t\tmouseleave:  filtTarg,\n\t\tmouseenter:  filtTarg,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\tclick: (self, e) => {\n\t\t//\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.stopImmediatePropagation();\n\t\t},\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tdist: (self, seriesIdx, dataIdx, valPos, curPos) => valPos - curPos,\n\t\tprox: -1,\n\t\tbias: 0,\n\t},\n\n\thover: {\n\t\tskip: [void 0],\n\t\tprox: null,\n\t\tbias: 0,\n\t},\n\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n\tdataIdx: null,\n\tidxs: null,\n\n\tevent: null,\n};\n\nconst axisLines = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n};\n\nconst grid = assign({}, axisLines, {\n\tfilter: retArg1,\n});\n\nconst ticks = assign({}, grid, {\n\tsize: 10,\n});\n\nconst border = assign({}, axisLines, {\n\tshow: false,\n});\n\nconst font      = '12px system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineGap = 1.5;\t// font-size multiplier\n\nconst xAxisOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tstroke: hexBlack,\n\tspace: 50,\n\tgap: 5,\n\talignTo: 1,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\tlineGap,\n\trotate: 0,\n};\n\nconst numSeriesLabel = \"Value\";\nconst timeSeriesLabel = \"Time\";\n\nconst xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tauto: false,\n\tsorted: 1,\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\nfunction numAxisVals(self, splits, axisIdx, foundSpace, foundIncr) {\n\treturn splits.map(v => v == null ? \"\" : fmtNum(v));\n}\n\nfunction numAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet splits = [];\n\n\tlet numDec = fixedDec.get(foundIncr) || 0;\n\n\tscaleMin = forceMin ? scaleMin : roundDec(incrRoundUp(scaleMin, foundIncr), numDec);\n\n\tfor (let val = scaleMin; val <= scaleMax; val = roundDec(val + foundIncr, numDec))\n\t\tsplits.push(Object.is(val, -0) ? 0 : val);\t\t// coalesces -0\n\n\treturn splits;\n}\n\n// this doesnt work for sin, which needs to come off from 0 independently in pos and neg dirs\nfunction logAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tconst splits = [];\n\n\tconst logBase = self.scales[self.axes[axisIdx].scale].log;\n\n\tconst logFn = logBase == 10 ? log10 : log2;\n\n\tconst exp = floor(logFn(scaleMin));\n\n\tfoundIncr = pow(logBase, exp);\n\n\t// boo: 10 ** -24 === 1.0000000000000001e-24\n\t// this grabs the proper 1e-24 one\n\tif (logBase == 10)\n\t\tfoundIncr = numIncrs[closestIdx(foundIncr, numIncrs)];\n\n\tlet split = scaleMin;\n\tlet nextMagIncr = foundIncr * logBase;\n\n\tif (logBase == 10)\n\t\tnextMagIncr = numIncrs[closestIdx(nextMagIncr, numIncrs)];\n\n\tdo {\n\t\tsplits.push(split);\n\t\tsplit = split + foundIncr;\n\n\t\tif (logBase == 10 && !fixedDec.has(split))\n\t\t\tsplit = roundDec(split, fixedDec.get(foundIncr));\n\n\t\tif (split >= nextMagIncr) {\n\t\t\tfoundIncr = split;\n\t\t\tnextMagIncr = foundIncr * logBase;\n\n\t\t\tif (logBase == 10)\n\t\t\t\tnextMagIncr = numIncrs[closestIdx(nextMagIncr, numIncrs)];\n\t\t}\n\t} while (split <= scaleMax);\n\n\treturn splits;\n}\n\nfunction asinhAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet sc = self.scales[self.axes[axisIdx].scale];\n\n\tlet linthresh = sc.asinh;\n\n\tlet posSplits = scaleMax > linthresh ? logAxisSplits(self, axisIdx, max(linthresh, scaleMin), scaleMax, foundIncr) : [linthresh];\n\tlet zero = scaleMax >= 0 && scaleMin <= 0 ? [0] : [];\n\tlet negSplits = scaleMin < -linthresh ? logAxisSplits(self, axisIdx, max(linthresh, -scaleMax), -scaleMin, foundIncr): [linthresh];\n\n\treturn negSplits.reverse().map(v => -v).concat(zero, posSplits);\n}\n\nconst RE_ALL   = /./;\nconst RE_12357 = /[12357]/;\nconst RE_125   = /[125]/;\nconst RE_1     = /1/;\n\nconst _filt = (splits, distr, re, keepMod) => splits.map((v, i) => ((distr == 4 && v == 0) || i % keepMod == 0 && re.test(v.toExponential()[v < 0 ? 1 : 0])) ? v : null);\n\nfunction log10AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet sc = self.scales[scaleKey];\n\n//\tif (sc.distr == 3 && sc.log == 2)\n//\t\treturn splits;\n\n\tlet valToPos = self.valToPos;\n\n\tlet minSpace = axis._space;\n\n\tlet _10 = valToPos(10, scaleKey);\n\n\tlet re = (\n\t\tvalToPos(9, scaleKey) - _10 >= minSpace ? RE_ALL :\n\t\tvalToPos(7, scaleKey) - _10 >= minSpace ? RE_12357 :\n\t\tvalToPos(5, scaleKey) - _10 >= minSpace ? RE_125 :\n\t\tRE_1\n\t);\n\n\tif (re == RE_1) {\n\t\tlet magSpace = abs(valToPos(1, scaleKey) - _10);\n\n\t\tif (magSpace < minSpace)\n\t\t\treturn _filt(splits.slice().reverse(), sc.distr, re, ceil(minSpace / magSpace)).reverse(); // max->min skip\n\t}\n\n\treturn _filt(splits, sc.distr, re, 1);\n}\n\nfunction log2AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet minSpace = axis._space;\n\tlet valToPos = self.valToPos;\n\n\tlet magSpace = abs(valToPos(1, scaleKey) - valToPos(2, scaleKey));\n\n\tif (magSpace < minSpace)\n\t\treturn _filt(splits.slice().reverse(), 3, RE_ALL, ceil(minSpace / magSpace)).reverse(); // max->min skip\n\n\treturn splits;\n}\n\nfunction numSeriesVal(self, val, seriesIdx, dataIdx) {\n\treturn dataIdx == null ? LEGEND_DISP : val == null ? \"\" : fmtNum(val);\n}\n\nconst yAxisOpts = {\n\tshow: true,\n\tscale: \"y\",\n\tstroke: hexBlack,\n\tspace: 30,\n\tgap: 5,\n\talignTo: 1,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\tlineGap,\n\trotate: 0,\n};\n\n// takes stroke width\nfunction ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn roundDec(dia * mult, 3);\n}\n\nfunction seriesPointsShow(self, si) {\n\tlet { scale, idxs } = self.series[0];\n\tlet xData = self._data[0];\n\tlet p0 = self.valToPos(xData[idxs[0]], scale, true);\n\tlet p1 = self.valToPos(xData[idxs[1]], scale, true);\n\tlet dim = abs(p1 - p0);\n\n\tlet s = self.series[si];\n//\tconst dia = ptDia(s.width, pxRatio);\n\tlet maxPts = dim / (s.points.space * pxRatio);\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nconst facet = {\n\tscale: null,\n\tauto: true,\n\tsorted: 0,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n};\n\nconst gaps = (self, seriesIdx, idx0, idx1, nullGaps) => nullGaps;\n\nconst xySeriesOpts = {\n\tshow: true,\n\tauto: true,\n\tsorted: 0,\n\tgaps,\n\talpha: 1,\n\tfacets: [\n\t\tassign({}, facet, {scale: 'x'}),\n\t\tassign({}, facet, {scale: 'y'}),\n\t],\n};\n\nconst ySeriesOpts = {\n\tscale: \"y\",\n\tauto: true,\n\tsorted: 0,\n\tshow: true,\n\tspanGaps: false,\n\tgaps,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPointsShow,\n\t\tfilter: null,\n\t//  paths:\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nfunction clampScale(self, val, scaleMin, scaleMax, scaleKey) {\n/*\n\tif (val < 0) {\n\t\tlet cssHgt = self.bbox.height / pxRatio;\n\t\tlet absPos = self.valToPos(abs(val), scaleKey);\n\t\tlet fromBtm = cssHgt - absPos;\n\t\treturn self.posToVal(cssHgt + fromBtm, scaleKey);\n\t}\n*/\n\treturn scaleMin / 10;\n}\n\nconst xScaleOpts = {\n\ttime: FEAT_TIME,\n\tauto: true,\n\tdistr: 1,\n\tlog: 10,\n\tasinh: 1,\n\tmin: null,\n\tmax: null,\n\tdir: 1,\n\tori: 0,\n};\n\nconst yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n\tori: 1,\n});\n\nconst syncs = {};\n\nfunction _sync(key, opts) {\n\tlet s = syncs[key];\n\n\tif (!s) {\n\t\ts = {\n\t\t\tkey,\n\t\t\tplots: [],\n\t\t\tsub(plot) {\n\t\t\t\ts.plots.push(plot);\n\t\t\t},\n\t\t\tunsub(plot) {\n\t\t\t\ts.plots = s.plots.filter(c => c != plot);\n\t\t\t},\n\t\t\tpub(type, self, x, y, w, h, i) {\n\t\t\t\tfor (let j = 0; j < s.plots.length; j++)\n\t\t\t\t\ts.plots[j] != self && s.plots[j].pub(type, self, x, y, w, h, i);\n\t\t\t},\n\t\t};\n\n\t\tif (key != null)\n\t\t\tsyncs[key] = s;\n\t}\n\n\treturn s;\n}\n\nconst BAND_CLIP_FILL   = 1 << 0;\nconst BAND_CLIP_STROKE = 1 << 1;\n\nfunction orient(u, seriesIdx, cb) {\n\tconst mode = u.mode;\n\tconst series = u.series[seriesIdx];\n\tconst data = mode == 2 ? u._data[seriesIdx] : u._data;\n\tconst scales = u.scales;\n\tconst bbox   = u.bbox;\n\n\tlet dx = data[0],\n\t\tdy = mode == 2 ? data[1] : data[seriesIdx],\n\t\tsx = mode == 2 ? scales[series.facets[0].scale] : scales[u.series[0].scale],\n\t\tsy = mode == 2 ? scales[series.facets[1].scale] : scales[series.scale],\n\t\tl = bbox.left,\n\t\tt = bbox.top,\n\t\tw = bbox.width,\n\t\th = bbox.height,\n\t\tH = u.valToPosH,\n\t\tV = u.valToPosV;\n\n\treturn (sx.ori == 0\n\t\t? cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tH,\n\t\t\tV,\n\t\t\tl,\n\t\t\tt,\n\t\t\tw,\n\t\t\th,\n\t\t\tmoveToH,\n\t\t\tlineToH,\n\t\t\trectH,\n\t\t\tarcH,\n\t\t\tbezierCurveToH,\n\t\t)\n\t\t: cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tV,\n\t\t\tH,\n\t\t\tt,\n\t\t\tl,\n\t\t\th,\n\t\t\tw,\n\t\t\tmoveToV,\n\t\t\tlineToV,\n\t\t\trectV,\n\t\t\tarcV,\n\t\t\tbezierCurveToV,\n\t\t)\n\t);\n}\n\nfunction bandFillClipDirs(self, seriesIdx) {\n\tlet fillDir = 0;\n\n\t// 2 bits, -1 | 1\n\tlet clipDirs = 0;\n\n\tlet bands = ifNull(self.bands, EMPTY_ARR);\n\n\tfor (let i = 0; i < bands.length; i++) {\n\t\tlet b = bands[i];\n\n\t\t// is a \"from\" band edge\n\t\tif (b.series[0] == seriesIdx)\n\t\t\tfillDir = b.dir;\n\t\t// is a \"to\" band edge\n\t\telse if (b.series[1] == seriesIdx) {\n\t\t\tif (b.dir == 1)\n\t\t\t\tclipDirs |= 1;\n\t\t\telse\n\t\t\t\tclipDirs |= 2;\n\t\t}\n\t}\n\n\treturn [\n\t\tfillDir,\n\t\t(\n\t\t\tclipDirs == 1 ? -1 : // neg only\n\t\t\tclipDirs == 2 ?  1 : // pos only\n\t\t\tclipDirs == 3 ?  2 : // both\n\t\t\t                 0   // neither\n\t\t)\n\t];\n}\n\nfunction seriesFillTo(self, seriesIdx, dataMin, dataMax, bandFillDir) {\n\tlet mode = self.mode;\n\tlet series = self.series[seriesIdx];\n\tlet scaleKey = mode == 2 ? series.facets[1].scale : series.scale;\n\tlet scale = self.scales[scaleKey];\n\n\treturn (\n\t\tbandFillDir == -1 ? scale.min :\n\t\tbandFillDir ==  1 ? scale.max :\n\t\tscale.distr ==  3 ? (\n\t\t\tscale.dir == 1 ? scale.min :\n\t\t\tscale.max\n\t\t) : 0\n\t);\n}\n\n// creates inverted band clip path (from stroke path -> yMax || yMin)\n// clipDir is always inverse of fillDir\n// default clip dir is upwards (1), since default band fill is downwards/fillBelowTo (-1) (highIdx -> lowIdx)\nfunction clipBandLine(self, seriesIdx, idx0, idx1, strokePath, clipDir) {\n\treturn orient(self, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\tlet pxRound = series.pxRound;\n\n\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\tconst lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\tlet frIdx, toIdx;\n\n\t\tif (dir == 1) {\n\t\t\tfrIdx = idx0;\n\t\t\ttoIdx = idx1;\n\t\t}\n\t\telse {\n\t\t\tfrIdx = idx1;\n\t\t\ttoIdx = idx0;\n\t\t}\n\n\t\t// path start\n\t\tlet x0 = pxRound(valToPosX(dataX[frIdx], scaleX, xDim, xOff));\n\t\tlet y0 = pxRound(valToPosY(dataY[frIdx], scaleY, yDim, yOff));\n\t\t// path end x\n\t\tlet x1 = pxRound(valToPosX(dataX[toIdx], scaleX, xDim, xOff));\n\t\t// upper or lower y limit\n\t\tlet yLimit = pxRound(valToPosY(clipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\n\t\tlet clip = new Path2D(strokePath);\n\n\t\tlineTo(clip, x1, yLimit);\n\t\tlineTo(clip, x0, yLimit);\n\t\tlineTo(clip, x0, y0);\n\n\t\treturn clip;\n\t});\n}\n\nfunction clipGaps(gaps, ori, plotLft, plotTop, plotWid, plotHgt) {\n\tlet clip = null;\n\n\t// create clip path (invert gaps and non-gaps)\n\tif (gaps.length > 0) {\n\t\tclip = new Path2D();\n\n\t\tconst rect = ori == 0 ? rectH : rectV;\n\n\t\tlet prevGapEnd = plotLft;\n\n\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\tlet g = gaps[i];\n\n\t\t\tif (g[1] > g[0]) {\n\t\t\t\tlet w = g[0] - prevGapEnd;\n\n\t\t\t\tw > 0 && rect(clip, prevGapEnd, plotTop, w, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\t\t}\n\n\t\tlet w = plotLft + plotWid - prevGapEnd;\n\n\t\t// hack to ensure we expand the clip enough to avoid cutting off strokes at edges\n\t\tlet maxStrokeWidth = 10;\n\n\t\tw > 0 && rect(clip, prevGapEnd, plotTop - maxStrokeWidth / 2, w, plotTop + plotHgt + maxStrokeWidth);\n\t}\n\n\treturn clip;\n}\n\nfunction addGap(gaps, fromX, toX) {\n\tlet prevGap = gaps[gaps.length - 1];\n\n\tif (prevGap && prevGap[0] == fromX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\tprevGap[1] = toX;\n\telse\n\t\tgaps.push([fromX, toX]);\n}\n\nfunction findGaps(xs, ys, idx0, idx1, dir, pixelForX, align) {\n\tlet gaps = [];\n\tlet len = xs.length;\n\n\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\tlet yVal = ys[i];\n\n\t\tif (yVal === null) {\n\t\t\tlet fr = i, to = i;\n\n\t\t\tif (dir == 1) {\n\t\t\t\twhile (++i <= idx1 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile (--i >= idx0 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\n\t\t\tlet frPx = pixelForX(xs[fr]);\n\t\t\tlet toPx = to == fr ? frPx : pixelForX(xs[to]);\n\n\t\t\t// if value adjacent to edge null is same pixel, then it's partially\n\t\t\t// filled and gap should start at next pixel\n\t\t\tlet fri2 = fr - dir;\n\t\t\tlet frPx2 = align <= 0 && fri2 >= 0 && fri2 < len ? pixelForX(xs[fri2]) : frPx;\n\t\t//\tif (frPx2 == frPx)\n\t\t//\t\tfrPx++;\n\t\t//\telse\n\t\t\t\tfrPx = frPx2;\n\n\t\t\tlet toi2 = to + dir;\n\t\t\tlet toPx2 = align >= 0 && toi2 >= 0 && toi2 < len ? pixelForX(xs[toi2]) : toPx;\n\t\t//\tif (toPx2 == toPx)\n\t\t//\t\ttoPx--;\n\t\t//\telse\n\t\t\t\ttoPx = toPx2;\n\n\t\t\tif (toPx >= frPx)\n\t\t\t\tgaps.push([frPx, toPx]); // addGap\n\t\t}\n\t}\n\n\treturn gaps;\n}\n\nfunction pxRoundGen(pxAlign) {\n\treturn pxAlign == 0 ? retArg0 : pxAlign == 1 ? round : v => incrRound(v, pxAlign);\n}\n\n/*\n// inefficient linear interpolation that does bi-directinal scans on each call\nexport function costlyLerp(i, idx0, idx1, _dirX, dataY) {\n\tlet prevNonNull = nonNullIdx(dataY, _dirX == 1 ? idx0 : idx1, i, -_dirX);\n\tlet nextNonNull = nonNullIdx(dataY, i, _dirX == 1 ? idx1 : idx0,  _dirX);\n\n\tlet prevVal = dataY[prevNonNull];\n\tlet nextVal = dataY[nextNonNull];\n\n\treturn prevVal + (i - prevNonNull) / (nextNonNull - prevNonNull) * (nextVal - prevVal);\n}\n*/\n\nfunction rect(ori) {\n\tlet moveTo = ori == 0 ?\n\t\tmoveToH :\n\t\tmoveToV;\n\n\tlet arcTo = ori == 0 ?\n\t\t(p, x1, y1, x2, y2, r) => { p.arcTo(x1, y1, x2, y2, r); } :\n\t\t(p, y1, x1, y2, x2, r) => { p.arcTo(x1, y1, x2, y2, r); };\n\n\tlet rect = ori == 0 ?\n\t\t(p, x, y, w, h) => { p.rect(x, y, w, h); } :\n\t\t(p, y, x, h, w) => { p.rect(x, y, w, h); };\n\n\t// TODO (pending better browser support): https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect\n\treturn (p, x, y, w, h, endRad = 0, baseRad = 0) => {\n\t\tif (endRad == 0 && baseRad == 0)\n\t\t\trect(p, x, y, w, h);\n\t\telse {\n\t\t\tendRad  = min(endRad,  w / 2, h / 2);\n\t\t\tbaseRad = min(baseRad, w / 2, h / 2);\n\n\t\t\t// adapted from https://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-using-html-canvas/7838871#7838871\n\t\t\tmoveTo(p, x + endRad, y);\n\t\t\tarcTo(p, x + w, y, x + w, y + h, endRad);\n\t\t\tarcTo(p, x + w, y + h, x, y + h, baseRad);\n\t\t\tarcTo(p, x, y + h, x, y, baseRad);\n\t\t\tarcTo(p, x, y, x + w, y, endRad);\n\t\t\tp.closePath();\n\t\t}\n\t};\n}\n\n// orientation-inverting canvas functions\nconst moveToH = (p, x, y) => { p.moveTo(x, y); };\nconst moveToV = (p, y, x) => { p.moveTo(x, y); };\nconst lineToH = (p, x, y) => { p.lineTo(x, y); };\nconst lineToV = (p, y, x) => { p.lineTo(x, y); };\nconst rectH = rect(0);\nconst rectV = rect(1);\nconst arcH = (p, x, y, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); };\nconst arcV = (p, y, x, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); };\nconst bezierCurveToH = (p, bp1x, bp1y, bp2x, bp2y, p2x, p2y) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\nconst bezierCurveToV = (p, bp1y, bp1x, bp2y, bp2x, p2y, p2x) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\n\n// TODO: drawWrap(seriesIdx, drawPoints) (save, restore, translate, clip)\nfunction points(opts) {\n\treturn (u, seriesIdx, idx0, idx1, filtIdxs) => {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet { pxRound, points } = series;\n\n\t\t\tlet moveTo, arc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tarc = arcH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tarc = arcV;\n\t\t\t}\n\n\t\t\tconst width = roundDec(points.width * pxRatio, 3);\n\n\t\t\tlet rad = (points.size - points.width) / 2 * pxRatio;\n\t\t\tlet dia = roundDec(rad * 2, 3);\n\n\t\t\tlet fill = new Path2D();\n\t\t\tlet clip = new Path2D();\n\n\t\t\tlet { left: lft, top: top, width: wid, height: hgt } = u.bbox;\n\n\t\t\trectH(clip,\n\t\t\t\tlft - dia,\n\t\t\t\ttop - dia,\n\t\t\t\twid + dia * 2,\n\t\t\t\thgt + dia * 2,\n\t\t\t);\n\n\t\t\tconst drawPoint = pi => {\n\t\t\t\tif (dataY[pi] != null) {\n\t\t\t\t\tlet x = pxRound(valToPosX(dataX[pi], scaleX, xDim, xOff));\n\t\t\t\t\tlet y = pxRound(valToPosY(dataY[pi], scaleY, yDim, yOff));\n\n\t\t\t\t\tmoveTo(fill, x + rad, y);\n\t\t\t\t\tarc(fill, x, y, rad, 0, PI * 2);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (filtIdxs)\n\t\t\t\tfiltIdxs.forEach(drawPoint);\n\t\t\telse {\n\t\t\t\tfor (let pi = idx0; pi <= idx1; pi++)\n\t\t\t\t\tdrawPoint(pi);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstroke: width > 0 ? fill : null,\n\t\t\t\tfill,\n\t\t\t\tclip,\n\t\t\t\tflags: BAND_CLIP_FILL | BAND_CLIP_STROKE,\n\t\t\t};\n\t\t});\n\t};\n}\n\nfunction _drawAcc(lineTo) {\n\treturn (stroke, accX, minY, maxY, inY, outY) => {\n\t\tif (minY != maxY) {\n\t\t\tif (inY != minY && outY != minY)\n\t\t\t\tlineTo(stroke, accX, minY);\n\t\t\tif (inY != maxY && outY != maxY)\n\t\t\t\tlineTo(stroke, accX, maxY);\n\n\t\t\tlineTo(stroke, accX, outY);\n\t\t}\n\t};\n}\n\nconst drawAccH = _drawAcc(lineToH);\nconst drawAccV = _drawAcc(lineToV);\n\nfunction linear(opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\t[idx0, idx1] = nonNullIdxs(dataY, idx0, idx1);\n\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo, drawAcc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tdrawAcc = drawAccH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tdrawAcc = drawAccV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet hasGap = false;\n\n\t\t\t// decimate when number of points >= 4x available pixels\n\t\t\tconst decimate = idx1 - idx0 >= xDim * 4;\n\n\t\t\tif (decimate) {\n\t\t\t\tlet xForPixel = pos => u.posToVal(pos, scaleX.key, true);\n\n\t\t\t\tlet minY = null,\n\t\t\t\t\tmaxY = null,\n\t\t\t\t\tinY, outY, drawnAtX;\n\n\t\t\t\tlet accX = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\n\t\t\t\tlet idx0px = pixelForX(dataX[idx0]);\n\t\t\t\tlet idx1px = pixelForX(dataX[idx1]);\n\n\t\t\t\t// tracks limit of current x bucket to avoid having to get x pixel for every x value\n\t\t\t\tlet nextAccXVal = xForPixel(dir == 1 ? idx0px + 1 : idx1px - 1);\n\n\t\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\t\tlet xVal = dataX[i];\n\t\t\t\t\tlet reuseAccX = dir == 1 ? (xVal < nextAccXVal) : (xVal > nextAccXVal);\n\t\t\t\t\tlet x = reuseAccX ? accX :  pixelForX(xVal);\n\n\t\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\t\tif (x == accX) {\n\t\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\t\toutY = yVal;\n\n\t\t\t\t\t\t\tif (minY == null) {\n\t\t\t\t\t\t\t\tlineTo(stroke, x, pixelForY(outY));\n\t\t\t\t\t\t\t\tinY = minY = maxY = outY;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (outY < minY)\n\t\t\t\t\t\t\t\t\tminY = outY;\n\t\t\t\t\t\t\t\telse if (outY > maxY)\n\t\t\t\t\t\t\t\t\tmaxY = outY;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (minY != null)\n\t\t\t\t\t\t\tdrawAcc(stroke, accX, pixelForY(minY), pixelForY(maxY), pixelForY(inY), pixelForY(outY));\n\n\t\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\t\toutY = yVal;\n\t\t\t\t\t\t\tlineTo(stroke, x, pixelForY(outY));\n\t\t\t\t\t\t\tminY = maxY = inY = outY;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminY = maxY = null;\n\n\t\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taccX = x;\n\t\t\t\t\t\tnextAccXVal = xForPixel(accX + dir);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (minY != null && minY != maxY && drawnAtX != accX)\n\t\t\t\t\tdrawAcc(stroke, accX, pixelForY(minY), pixelForY(maxY), pixelForY(inY), pixelForY(outY));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\thasGap = true;\n\t\t\t\t\telse if (yVal != null)\n\t\t\t\t\t\tlineTo(stroke, pixelForX(dataX[i]), pixelForY(yVal));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillToVal = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillToVal);\n\n\t\t\t\tlet frX = pixelForX(dataX[idx0]);\n\t\t\t\tlet toX = pixelForX(dataX[idx1]);\n\n\t\t\t\tif (dir == -1)\n\t\t\t\t\t[toX, frX] = [frX, toX];\n\n\t\t\t\tlineTo(fill, toX, fillToY);\n\t\t\t\tlineTo(fill, frX, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) { // skip in mode: 2?\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\thasGap && gaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\n// BUG: align: -1 behaves like align: 1 when scale.dir: -1\nfunction stepped(opts) {\n\tconst align = ifNull(opts.align, 1);\n\t// whether to draw ascenders/descenders at null/gap bondaries\n\tconst ascDesc = ifNull(opts.ascDesc, false);\n\tconst alignGaps = ifNull(opts.alignGaps, 0);\n\tconst extend = ifNull(opts.extend, false);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\t[idx0, idx1] = nonNullIdxs(dataY, idx0, idx1);\n\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet { left, width } = u.bbox;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tlet prevYPos  = pixelForY(dataY[dir == 1 ? idx0 : idx1]);\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet firstXPosExt = firstXPos;\n\n\t\t\tif (extend && align == -1) {\n\t\t\t\tfirstXPosExt = left;\n\t\t\t\tlineTo(stroke, firstXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlineTo(stroke, firstXPos, prevYPos);\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal1 = dataY[i];\n\n\t\t\t\tif (yVal1 == null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet x1 = pixelForX(dataX[i]);\n\t\t\t\tlet y1 = pixelForY(yVal1);\n\n\t\t\t\tif (align == 1)\n\t\t\t\t\tlineTo(stroke, x1, prevYPos);\n\t\t\t\telse\n\t\t\t\t\tlineTo(stroke, prevXPos, y1);\n\n\t\t\t\tlineTo(stroke, x1, y1);\n\n\t\t\t\tprevYPos = y1;\n\t\t\t\tprevXPos = x1;\n\t\t\t}\n\n\t\t\tlet prevXPosExt = prevXPos;\n\n\t\t\tif (extend && align == 1) {\n\t\t\t\tprevXPosExt = left + width;\n\t\t\t\tlineTo(stroke, prevXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPosExt, fillToY);\n\t\t\t\tlineTo(fill, firstXPosExt, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t// expand/contract clips for ascenders/descenders\n\t\t\t\tlet halfStroke = (series.width * pxRatio) / 2;\n\t\t\t\tlet startsOffset = (ascDesc || align ==  1) ?  halfStroke : -halfStroke;\n\t\t\t\tlet endsOffset   = (ascDesc || align == -1) ? -halfStroke :  halfStroke;\n\n\t\t\t\tgaps.forEach(g => {\n\t\t\t\t\tg[0] += startsOffset;\n\t\t\t\t\tg[1] += endsOffset;\n\t\t\t\t});\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\nfunction findColWidth(dataX, dataY, valToPosX, scaleX, xDim, xOff, colWid = inf) {\n\tif (dataX.length > 1) {\n\t\t// prior index with non-undefined y data\n\t\tlet prevIdx = null;\n\n\t\t// scan full dataset for smallest adjacent delta\n\t\t// will not work properly for non-linear x scales, since does not do expensive valToPosX calcs till end\n\t\tfor (let i = 0, minDelta = Infinity; i < dataX.length; i++) {\n\t\t\tif (dataY[i] !== undefined) {\n\t\t\t\tif (prevIdx != null) {\n\t\t\t\t\tlet delta = abs(dataX[i] - dataX[prevIdx]);\n\n\t\t\t\t\tif (delta < minDelta) {\n\t\t\t\t\t\tminDelta = delta;\n\t\t\t\t\t\tcolWid = abs(valToPosX(dataX[i], scaleX, xDim, xOff) - valToPosX(dataX[prevIdx], scaleX, xDim, xOff));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevIdx = i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn colWid;\n}\n\nfunction bars(opts) {\n\topts = opts || EMPTY_OBJ;\n\tconst size = ifNull(opts.size, [0.6, inf, 1]);\n\tconst align = opts.align || 0;\n\tconst _extraGap = (opts.gap || 0);\n\n\tlet ro = opts.radius;\n\n\tro =\n\t\t// [valueRadius, baselineRadius]\n\t\tro == null ? [0, 0] :\n\t\ttypeof ro == 'number' ? [ro, 0] : ro;\n\n\tconst radiusFn = fnOrSelf(ro);\n\n\tconst gapFactor = 1 - size[0];\n\tconst _maxWidth  = ifNull(size[1], inf);\n\tconst _minWidth  = ifNull(size[2], 1);\n\n\tconst disp = ifNull(opts.disp, EMPTY_OBJ);\n\tconst _each = ifNull(opts.each, _ => {});\n\n\tconst { fill: dispFills, stroke: dispStrokes } = disp;\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\t\t\tlet _align = align;\n\n\t\t\tlet extraGap = _extraGap * pxRatio;\n\t\t\tlet maxWidth = _maxWidth * pxRatio;\n\t\t\tlet minWidth = _minWidth * pxRatio;\n\n\t\t\tlet valRadius, baseRadius;\n\n\t\t\tif (scaleX.ori == 0)\n\t\t\t\t[valRadius, baseRadius] = radiusFn(u, seriesIdx);\n\t\t\telse\n\t\t\t\t[baseRadius, valRadius] = radiusFn(u, seriesIdx);\n\n\t\t\tconst _dirX = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\t//\tconst _dirY = scaleY.dir * (scaleY.ori == 1 ? 1 : -1);\n\n\t\t\tlet rect = scaleX.ori == 0 ? rectH : rectV;\n\n\t\t\tlet each = scaleX.ori == 0 ? _each : (u, seriesIdx, i, top, lft, hgt, wid) => {\n\t\t\t\t_each(u, seriesIdx, i, lft, top, wid, hgt);\n\t\t\t};\n\n\t\t\t// band where this series is the \"from\" edge\n\t\t\tlet band = ifNull(u.bands, EMPTY_ARR).find(b => b.series[0] == seriesIdx);\n\n\t\t\tlet fillDir = band != null ? band.dir : 0;\n\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, fillDir);\n\t\t\tlet fillToY = pxRound(valToPosY(fillTo, scaleY, yDim, yOff));\n\n\t\t\t// barWid is to center of stroke\n\t\t\tlet xShift, barWid, fullGap, colWid = xDim;\n\n\t\t\tlet strokeWidth = pxRound(series.width * pxRatio);\n\n\t\t\tlet multiPath = false;\n\n\t\t\tlet fillColors = null;\n\t\t\tlet fillPaths = null;\n\t\t\tlet strokeColors = null;\n\t\t\tlet strokePaths = null;\n\n\t\t\tif (dispFills != null && (strokeWidth == 0 || dispStrokes != null)) {\n\t\t\t\tmultiPath = true;\n\n\t\t\t\tfillColors = dispFills.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tfillPaths = new Map();\n\t\t\t\t(new Set(fillColors)).forEach(color => {\n\t\t\t\t\tif (color != null)\n\t\t\t\t\t\tfillPaths.set(color, new Path2D());\n\t\t\t\t});\n\n\t\t\t\tif (strokeWidth > 0) {\n\t\t\t\t\tstrokeColors = dispStrokes.values(u, seriesIdx, idx0, idx1);\n\t\t\t\t\tstrokePaths = new Map();\n\t\t\t\t\t(new Set(strokeColors)).forEach(color => {\n\t\t\t\t\t\tif (color != null)\n\t\t\t\t\t\t\tstrokePaths.set(color, new Path2D());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet { x0, size } = disp;\n\n\t\t\tif (x0 != null && size != null) {\n\t\t\t\t_align = 1;\n\t\t\t\tdataX = x0.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (x0.unit == 2)\n\t\t\t\t\tdataX = dataX.map(pct => u.posToVal(xOff + pct * xDim, scaleX.key, true));\n\n\t\t\t\t// assumes uniform sizes, for now\n\t\t\t\tlet sizes = size.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (size.unit == 2)\n\t\t\t\t\tbarWid = sizes[0] * xDim;\n\t\t\t\telse\n\t\t\t\t\tbarWid = valToPosX(sizes[0], scaleX, xDim, xOff) - valToPosX(0, scaleX, xDim, xOff); // assumes linear scale (delta from 0)\n\n\t\t\t\tcolWid = findColWidth(dataX, dataY, valToPosX, scaleX, xDim, xOff, colWid);\n\n\t\t\t\tlet gapWid = colWid - barWid;\n\t\t\t\tfullGap = gapWid + extraGap;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcolWid = findColWidth(dataX, dataY, valToPosX, scaleX, xDim, xOff, colWid);\n\n\t\t\t\tlet gapWid = colWid * gapFactor;\n\n\t\t\t\tfullGap = gapWid + extraGap;\n\t\t\t\tbarWid = colWid - fullGap;\n\t\t\t}\n\n\t\t\tif (fullGap < 1)\n\t\t\t\tfullGap = 0;\n\n\t\t\tif (strokeWidth >= barWid / 2)\n\t\t\t\tstrokeWidth = 0;\n\n\t\t\t// for small gaps, disable pixel snapping since gap inconsistencies become noticible and annoying\n\t\t\tif (fullGap < 5)\n\t\t\t\tpxRound = retArg0;\n\n\t\t\tlet insetStroke = fullGap > 0;\n\n\t\t\tlet rawBarWid = colWid - fullGap - (insetStroke ? strokeWidth : 0);\n\n\t\t\tbarWid = pxRound(clamp(rawBarWid, minWidth, maxWidth));\n\n\t\t\txShift = (_align == 0 ? barWid / 2 : _align == _dirX ? 0 : barWid) - _align * _dirX * ((_align == 0 ? extraGap / 2 : 0) + (insetStroke ? strokeWidth / 2 : 0));\n\n\n\t\t\tconst _paths = {stroke: null, fill: null, clip: null, band: null, gaps: null, flags: 0};  // disp, geom\n\n\t\t\tconst stroke = multiPath ? null : new Path2D();\n\n\t\t\tlet dataY0 = null;\n\n\t\t\tif (band != null)\n\t\t\t\tdataY0 = u.data[band.series[1]];\n\t\t\telse {\n\t\t\t\tlet { y0, y1 } = disp;\n\n\t\t\t\tif (y0 != null && y1 != null) {\n\t\t\t\t\tdataY = y1.values(u, seriesIdx, idx0, idx1);\n\t\t\t\t\tdataY0 = y0.values(u, seriesIdx, idx0, idx1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet radVal = valRadius * barWid;\n\t\t\tlet radBase = baseRadius * barWid;\n\n\t\t\tfor (let i = _dirX == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += _dirX) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (yVal == null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (dataY0 != null) {\n\t\t\t\t\tlet yVal0 = dataY0[i] ?? 0;\n\n\t\t\t\t\tif (yVal - yVal0 == 0)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tfillToY = valToPosY(yVal0, scaleY, yDim, yOff);\n\t\t\t\t}\n\n\t\t\t\tlet xVal = scaleX.distr != 2 || disp != null ? dataX[i] : i;\n\n\t\t\t\t// TODO: all xPos can be pre-computed once for all series in aligned set\n\t\t\t\tlet xPos = valToPosX(xVal, scaleX, xDim, xOff);\n\t\t\t\tlet yPos = valToPosY(ifNull(yVal, fillTo), scaleY, yDim, yOff);\n\n\t\t\t\tlet lft = pxRound(xPos - xShift);\n\t\t\t\tlet btm = pxRound(max(yPos, fillToY));\n\t\t\t\tlet top = pxRound(min(yPos, fillToY));\n\t\t\t\t// this includes the stroke\n\t\t\t\tlet barHgt = btm - top;\n\n\t\t\t\tif (yVal != null) {  // && yVal != fillTo (0 height bar)\n\t\t\t\t\tlet rv = yVal < 0 ? radBase : radVal;\n\t\t\t\t\tlet rb = yVal < 0 ? radVal : radBase;\n\n\t\t\t\t\tif (multiPath) {\n\t\t\t\t\t\tif (strokeWidth > 0 && strokeColors[i] != null)\n\t\t\t\t\t\t\trect(strokePaths.get(strokeColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\t\tif (fillColors[i] != null)\n\t\t\t\t\t\t\trect(fillPaths.get(fillColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trect(stroke, lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\teach(u, seriesIdx, i,\n\t\t\t\t\t\tlft    - strokeWidth / 2,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbarWid + strokeWidth,\n\t\t\t\t\t\tbarHgt,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (strokeWidth > 0)\n\t\t\t\t_paths.stroke = multiPath ? strokePaths : stroke;\n\t\t\telse if (!multiPath) {\n\t\t\t\t_paths._fill = series.width == 0 ? series._fill : series._stroke ?? series._fill;\n\t\t\t\t_paths.width = 0;\n\t\t\t}\n\n\t\t\t_paths.fill = multiPath ? fillPaths : stroke;\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\nfunction splineInterp(interp, opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\t[idx0, idx1] = nonNullIdxs(dataY, idx0, idx1);\n\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet moveTo, bezierCurveTo, lineTo;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tbezierCurveTo = bezierCurveToH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tbezierCurveTo = bezierCurveToV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet xCoords = [];\n\t\t\tlet yCoords = [];\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (yVal != null) {\n\t\t\t\t\tlet xVal = dataX[i];\n\t\t\t\t\tlet xPos = pixelForX(xVal);\n\n\t\t\t\t\txCoords.push(prevXPos = xPos);\n\t\t\t\t\tyCoords.push(pixelForY(dataY[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: interp(xCoords, yCoords, moveTo, lineTo, bezierCurveTo, pxRound), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPos, fillToY);\n\t\t\t\tlineTo(fill, firstXPos, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\n\t\t\t//  if FEAT_PATHS: false in rollup.config.js\n\t\t\t//\tu.ctx.save();\n\t\t\t//\tu.ctx.beginPath();\n\t\t\t//\tu.ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n\t\t\t//\tu.ctx.clip();\n\t\t\t//\tu.ctx.strokeStyle = u.series[sidx].stroke;\n\t\t\t//\tu.ctx.stroke(stroke);\n\t\t\t//\tu.ctx.fillStyle = u.series[sidx].fill;\n\t\t\t//\tu.ctx.fill(fill);\n\t\t\t//\tu.ctx.restore();\n\t\t\t//\treturn null;\n\t\t});\n\t};\n}\n\nfunction monotoneCubic(opts) {\n\treturn splineInterp(_monotoneCubic, opts);\n}\n\n// Monotone Cubic Spline interpolation, adapted from the Chartist.js implementation:\n// https://github.com/gionkunz/chartist-js/blob/e7e78201bffe9609915e5e53cfafa29a5d6c49f9/src/scripts/interpolation.js#L240-L369\nfunction _monotoneCubic(xs, ys, moveTo, lineTo, bezierCurveTo, pxRound) {\n\tconst n = xs.length;\n\n\tif (n < 2)\n\t\treturn null;\n\n\tconst path = new Path2D();\n\n\tmoveTo(path, xs[0], ys[0]);\n\n\tif (n == 2)\n\t\tlineTo(path, xs[1], ys[1]);\n\telse {\n\t\tlet ms  = Array(n),\n\t\t\tds  = Array(n - 1),\n\t\t\tdys = Array(n - 1),\n\t\t\tdxs = Array(n - 1);\n\n\t\t// calc deltas and derivative\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tdys[i] = ys[i + 1] - ys[i];\n\t\t\tdxs[i] = xs[i + 1] - xs[i];\n\t\t\tds[i]  = dys[i] / dxs[i];\n\t\t}\n\n\t\t// determine desired slope (m) at each point using Fritsch-Carlson method\n\t\t// http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\t\tms[0] = ds[0];\n\n\t\tfor (let i = 1; i < n - 1; i++) {\n\t\t\tif (ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0))\n\t\t\t\tms[i] = 0;\n\t\t\telse {\n\t\t\t\tms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n\t\t\t\t\t(2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n\t\t\t\t\t(dxs[i] + 2 * dxs[i - 1]) / ds[i]\n\t\t\t\t);\n\n\t\t\t\tif (!isFinite(ms[i]))\n\t\t\t\t\tms[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tms[n - 1] = ds[n - 2];\n\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tbezierCurveTo(\n\t\t\t\tpath,\n\t\t\t\txs[i] + dxs[i] / 3,\n\t\t\t\tys[i] + ms[i] * dxs[i] / 3,\n\t\t\t\txs[i + 1] - dxs[i] / 3,\n\t\t\t\tys[i + 1] - ms[i + 1] * dxs[i] / 3,\n\t\t\t\txs[i + 1],\n\t\t\t\tys[i + 1],\n\t\t\t);\n\t\t}\n\t}\n\n\treturn path;\n}\n\nconst cursorPlots = new Set();\n\nfunction invalidateRects() {\n\tfor (let u of cursorPlots)\n\t\tu.syncRect(true);\n}\n\nif (domEnv) {\n\ton(resize, win, invalidateRects);\n\ton(scroll, win, invalidateRects, true);\n\ton(dppxchange, win, () => { uPlot.pxRatio = pxRatio; });\n}\n\nconst linearPath = linear() ;\nconst pointsPath = points() ;\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefaults2(d, xyo) {\n\treturn d.map((o, i) => i == 0 ? {} : assign({}, xyo, o));  // todo: assign() will not merge facet arrays\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 ? xo : yo), o);\n}\n\nfunction snapNumX(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : [dataMin, dataMax];\n}\n\nconst snapTimeX = snapNumX;\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, rangePad, true);\n}\n\nfunction snapLogY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeLog(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapLogX = snapLogY;\n\nfunction snapAsinhY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeAsinh(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapAsinhX = snapAsinhY;\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(minVal, maxVal, incrs, dim, minSpace) {\n\tlet intDigits = max(numIntDigits(minVal), numIntDigits(maxVal));\n\n\tlet delta = maxVal - minVal;\n\n\tlet incrIdx = closestIdx((minSpace / dim) * delta, incrs);\n\n\tdo {\n\t\tlet foundIncr = incrs[incrIdx];\n\t\tlet foundSpace = dim * foundIncr / delta;\n\n\t\tif (foundSpace >= minSpace && intDigits + (foundIncr < 5 ? fixedDec.get(foundIncr) : 0) <= 17)\n\t\t\treturn [foundIncr, foundSpace];\n\t} while (++incrIdx < incrs.length);\n\n\treturn [0, 0];\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize, fontSizeCss;\n\tfont = font.replace(/(\\d+)px/, (m, p1) => (fontSize = round((fontSizeCss = +p1) * pxRatio)) + 'px');\n\treturn [font, fontSize, fontSizeCss];\n}\n\nfunction syncFontSize(axis) {\n\tif (axis.show) {\n\t\t[axis.font, axis.labelFont].forEach(f => {\n\t\t\tlet size = roundDec(f[2] * pxRatio, 1);\n\t\t\tf[0] = f[0].replace(/[0-9.]+px/, size + 'px');\n\t\t\tf[1] = size;\n\t\t});\n\t}\n}\n\nfunction uPlot(opts, data, then) {\n\tconst self = {\n\t\tmode: ifNull(opts.mode, 1),\n\t};\n\n\tconst mode = self.mode;\n\n\tfunction getHPos(val, scale, dim, off) {\n\t\tlet pct = scale.valToPct(val);\n\t\treturn off + dim * (scale.dir == -1 ? (1 - pct) : pct);\n\t}\n\n\tfunction getVPos(val, scale, dim, off) {\n\t\tlet pct = scale.valToPct(val);\n\t\treturn off + dim * (scale.dir == -1 ? pct : (1 - pct));\n\t}\n\n\tfunction getPos(val, scale, dim, off) {\n\t\treturn scale.ori == 0 ? getHPos(val, scale, dim, off) : getVPos(val, scale, dim, off);\n\t}\n\n\tself.valToPosH = getHPos;\n\tself.valToPosV = getVPos;\n\n\tlet ready = false;\n\tself.status = 0;\n\n\tconst root = self.root = placeDiv(UPLOT);\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(TITLE, root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(WRAP, root);\n\n\ton(\"click\", wrap, e => {\n\t\tif (e.target === over) {\n\t\t\tlet didDrag = mouseLeft1 != mouseLeft0 || mouseTop1 != mouseTop0;\n\t\t\tdidDrag && drag.click(self, e);\n\t\t}\n\t}, true);\n\n\tconst under = self.under = placeDiv(UNDER, wrap);\n\twrap.appendChild(can);\n\tconst over = self.over = placeDiv(OVER, wrap);\n\n\topts = copy(opts);\n\n\tconst pxAlign = +ifNull(opts.pxAlign, 1);\n\n\tconst pxRound = pxRoundGen(pxAlign);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\tconst ms = opts.ms || 1e-3;\n\n\tconst series  = self.series = mode == 1 ?\n\t\tsetDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false) :\n\t\tsetDefaults2(opts.series || [null], xySeriesOpts);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = {};\n\tconst bands   = self.bands  = opts.bands || [];\n\n\tbands.forEach(b => {\n\t\tb.fill = fnOrSelf(b.fill || null);\n\t\tb.dir = ifNull(b.dir, -1);\n\t});\n\n\tconst xScaleKey = mode == 2 ? series[1].facets[0].scale : series[0].scale;\n\n\tconst drawOrderMap = {\n\t\taxes: drawAxesGrid,\n\t\tseries: drawSeries,\n\t};\n\n\tconst drawOrder = (opts.drawOrder || [\"axes\", \"series\"]).map(key => drawOrderMap[key]);\n\n\tfunction initValToPct(sc) {\n\t\tconst getVal = (\n\t\t\tsc.distr == 3   ? val => log10(val > 0 ? val : sc.clamp(self, val, sc.min, sc.max, sc.key)) :\n\t\t\tsc.distr == 4   ? val => asinh(val, sc.asinh) :\n\t\t\tsc.distr == 100 ? val => sc.fwd(val) :\n\t\t\tval => val\n\t\t);\n\n\t\treturn val => {\n\t\t\tlet _val = getVal(val);\n\t\t\tlet { _min, _max } = sc;\n\t\t\tlet delta = _max - _min;\n\t\t\treturn (_val - _min) / delta;\n\t\t};\n\t}\n\n\tfunction initScale(scaleKey) {\n\t\tlet sc = scales[scaleKey];\n\n\t\tif (sc == null) {\n\t\t\tlet scaleOpts = (opts.scales || EMPTY_OBJ)[scaleKey] || EMPTY_OBJ;\n\n\t\t\tif (scaleOpts.from != null) {\n\t\t\t\t// ensure parent is initialized\n\t\t\t\tinitScale(scaleOpts.from);\n\t\t\t\t// dependent scales inherit\n\t\t\t\tlet sc = assign({}, scales[scaleOpts.from], scaleOpts, {key: scaleKey});\n\t\t\t\tsc.valToPct = initValToPct(sc);\n\t\t\t\tscales[scaleKey] = sc;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsc = scales[scaleKey] = assign({}, (scaleKey == xScaleKey ? xScaleOpts : yScaleOpts), scaleOpts);\n\n\t\t\t\tsc.key = scaleKey;\n\n\t\t\t\tlet isTime = sc.time;\n\n\t\t\t\tlet rn = sc.range;\n\n\t\t\t\tlet rangeIsArr = isArr(rn);\n\n\t\t\t\tif (scaleKey != xScaleKey || (mode == 2 && !isTime)) {\n\t\t\t\t\t// if range array has null limits, it should be auto\n\t\t\t\t\tif (rangeIsArr && (rn[0] == null || rn[1] == null)) {\n\t\t\t\t\t\trn = {\n\t\t\t\t\t\t\tmin: rn[0] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[0],\n\t\t\t\t\t\t\t\tsoft: rn[0],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmax: rn[1] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[1],\n\t\t\t\t\t\t\t\tsoft: rn[1],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\trangeIsArr = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!rangeIsArr && isObj(rn)) {\n\t\t\t\t\t\tlet cfg = rn;\n\t\t\t\t\t\t// this is similar to snapNumY\n\t\t\t\t\t\trn = (self, dataMin, dataMax) => dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, cfg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsc.range = fnOrSelf(rn || (isTime ? snapTimeX : scaleKey == xScaleKey ?\n\t\t\t\t\t(sc.distr == 3 ? snapLogX : sc.distr == 4 ? snapAsinhX : snapNumX) :\n\t\t\t\t\t(sc.distr == 3 ? snapLogY : sc.distr == 4 ? snapAsinhY : snapNumY)\n\t\t\t\t));\n\n\t\t\t\tsc.auto = fnOrSelf(rangeIsArr ? false : sc.auto);\n\n\t\t\t\tsc.clamp = fnOrSelf(sc.clamp || clampScale);\n\n\t\t\t\t// caches for expensive ops like asinh() & log()\n\t\t\t\tsc._min = sc._max = null;\n\n\t\t\t\tsc.valToPct = initValToPct(sc);\n\t\t\t}\n\t\t}\n\t}\n\n\tinitScale(\"x\");\n\tinitScale(\"y\");\n\n\t// TODO: init scales from facets in mode: 2\n\tif (mode == 1) {\n\t\tseries.forEach(s => {\n\t\t\tinitScale(s.scale);\n\t\t});\n\t}\n\n\taxes.forEach(a => {\n\t\tinitScale(a.scale);\n\t});\n\n\tfor (let k in opts.scales)\n\t\tinitScale(k);\n\n\tconst scaleX = scales[xScaleKey];\n\n\tconst xScaleDistr = scaleX.distr;\n\n\tlet valToPosX, valToPosY;\n\n\tif (scaleX.ori == 0) {\n\t\taddClass(root, ORI_HZ);\n\t\tvalToPosX = getHPos;\n\t\tvalToPosY = getVPos;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotWid;\n\t\t\txOffCan = plotLft;\n\t\t\tyDimCan = plotHgt;\n\t\t\tyOffCan = plotTop;\n\n\t\t\txDimCss = plotWidCss;\n\t\t\txOffCss = plotLftCss;\n\t\t\tyDimCss = plotHgtCss;\n\t\t\tyOffCss = plotTopCss;\n\t\t};\n\t\t*/\n\t}\n\telse {\n\t\taddClass(root, ORI_VT);\n\t\tvalToPosX = getVPos;\n\t\tvalToPosY = getHPos;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotHgt;\n\t\t\txOffCan = plotTop;\n\t\t\tyDimCan = plotWid;\n\t\t\tyOffCan = plotLft;\n\n\t\t\txDimCss = plotHgtCss;\n\t\t\txOffCss = plotTopCss;\n\t\t\tyDimCss = plotWidCss;\n\t\t\tyOffCss = plotLftCss;\n\t\t};\n\t\t*/\n\t}\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null) {\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t\t\tsc.min = sc.max = null;\n\t\t}\n\t}\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  = (opts.tzDate || (ts => new Date(round(ts / ms))));\n\tconst _fmtDate = (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits = (ms == 1 ? timeAxisSplitsMs(_tzDate) : timeAxisSplitsS(_tzDate));\n\tconst _timeAxisVals   = timeAxisVals(_tzDate, timeAxisStamps((ms == 1 ? _timeAxisStampsMs : _timeAxisStampsS), _fmtDate));\n\tconst _timeSeriesVal  = timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst activeIdxs = [];\n\n\tconst legend     = (self.legend = assign({}, legendOpts, opts.legend));\n\tconst cursor     =                (self.cursor = assign({}, cursorOpts, {drag: {y: mode == 2}}, opts.cursor));\n\tconst showLegend = legend.show;\n\tconst showCursor =                cursor.show;\n\tconst markers    = legend.markers;\n\n\t{\n\t\tlegend.idxs = activeIdxs;\n\n\t\tmarkers.width  = fnOrSelf(markers.width);\n\t\tmarkers.dash   = fnOrSelf(markers.dash);\n\t\tmarkers.stroke = fnOrSelf(markers.stroke);\n\t\tmarkers.fill   = fnOrSelf(markers.fill);\n\t}\n\n\tlet legendTable;\n\tlet legendHead;\n\tlet legendBody;\n\tlet legendRows = [];\n\tlet legendCells = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\tlet NULL_LEGEND_VALUES = {};\n\n\tif (legend.live) {\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\t\tlegendCols = multiValLegend ? getMultiVals(self, 1, 0) : {_: 0};\n\n\t\tfor (let k in legendCols)\n\t\t\tNULL_LEGEND_VALUES[k] = LEGEND_DISP;\n\t}\n\n\tif (showLegend) {\n\t\tlegendTable = placeTag(\"table\", LEGEND, root);\n\t\tlegendBody = placeTag(\"tbody\", null, legendTable);\n\n\t\t// allows legend to be moved out of root\n\t\tlegend.mount(self, legendTable);\n\n\t\tif (multiValLegend) {\n\t\t\tlegendHead = placeTag(\"thead\", null, legendTable, legendBody);\n\n\t\t\tlet head = placeTag(\"tr\", null, legendHead);\n\t\t\tplaceTag(\"th\", null, head);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", LEGEND_LABEL, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\taddClass(legendTable, LEGEND_INLINE);\n\t\t\tlegend.live && addClass(legendTable, LEGEND_LIVE);\n\t\t}\n\t}\n\n\tconst son  = {show: true};\n\tconst soff = {show: false};\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && (multiValLegend || !legend.live || mode == 2))\n\t\t\treturn nullNullTuple;\n\n\t\tlet cells = [];\n\n\t\tlet row = placeTag(\"tr\", LEGEND_SERIES, legendBody, legendBody.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, OFF);\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tif (markers.show) {\n\t\t\tlet indic = placeDiv(LEGEND_MARKER, label);\n\n\t\t\tif (i > 0) {\n\t\t\t\tlet width  = markers.width(self, i);\n\n\t\t\t\tif (width)\n\t\t\t\t\tindic.style.border = width + \"px \" + markers.dash(self, i) + \" \" + markers.stroke(self, i);\n\n\t\t\t\tindic.style.background = markers.fill(self, i);\n\t\t\t}\n\t\t}\n\n\t\tlet text = placeDiv(LEGEND_LABEL, label);\n\n\t\tif (s.label instanceof HTMLElement)\n\t\t\ttext.appendChild(s.label);\n\t\telse\n\t\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\tif (!markers.show)\n\t\t\t\ttext.style.color = s.width > 0 ? markers.stroke(self, i) : markers.fill(self, i);\n\n\t\t\tonMouse(\"click\", label, e => {\n\t\t\t\tif (cursor._lock)\n\t\t\t\t\treturn;\n\n\t\t\t\tsetCursorEvent(e);\n\n\t\t\t\tlet seriesIdx = series.indexOf(s);\n\n\t\t\t\tif ((e.ctrlKey || e.metaKey) != legend.isolate) {\n\t\t\t\t\t// if any other series is shown, isolate this one. else show all\n\t\t\t\t\tlet isolate = series.some((s, i) => i > 0 && i != seriesIdx && s.show);\n\n\t\t\t\t\tseries.forEach((s, i) => {\n\t\t\t\t\t\ti > 0 && setSeries(i, isolate ? (i == seriesIdx ? son : soff) : son, true, syncOpts.setSeries);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsetSeries(seriesIdx, {show: !s.show}, true, syncOpts.setSeries);\n\t\t\t}, false);\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tonMouse(mouseenter, label, e => {\n\t\t\t\t\tif (cursor._lock)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetCursorEvent(e);\n\n\t\t\t\t\tsetSeries(series.indexOf(s), FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t\t\t}, false);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", LEGEND_VALUE, row);\n\t\t\tv.textContent = \"--\";\n\t\t\tcells.push(v);\n\t\t}\n\n\t\treturn [row, cells];\n\t}\n\n\tconst mouseListeners = new Map();\n\n\tfunction onMouse(ev, targ, fn, onlyTarg = true) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\t\tconst listener = cursor.bind[ev](self, targ, fn, onlyTarg);\n\n\t\tif (listener) {\n\t\t\ton(ev, targ, targListeners[ev] = listener);\n\t\t\tmouseListeners.set(targ, targListeners);\n\t\t}\n\t}\n\n\tfunction offMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\n\t\tfor (let k in targListeners) {\n\t\t\tif (ev == null || k == ev) {\n\t\t\t\toff(k, targ, targListeners[k]);\n\t\t\t\tdelete targListeners[k];\n\t\t\t}\n\t\t}\n\n\t\tif (ev == null)\n\t\t\tmouseListeners.delete(targ);\n\t}\n\n\tlet fullWidCss = 0;\n\tlet fullHgtCss = 0;\n\n\tlet plotWidCss = 0;\n\tlet plotHgtCss = 0;\n\n\t// plot margins to account for axes\n\tlet plotLftCss = 0;\n\tlet plotTopCss = 0;\n\n\t// previous values for diffing\n\tlet _plotLftCss = plotLftCss;\n\tlet _plotTopCss = plotTopCss;\n\tlet _plotWidCss = plotWidCss;\n\tlet _plotHgtCss = plotHgtCss;\n\n\n\tlet plotLft = 0;\n\tlet plotTop = 0;\n\tlet plotWid = 0;\n\tlet plotHgt = 0;\n\n\tself.bbox = {};\n\n\tlet shouldSetScales = false;\n\tlet shouldSetSize = false;\n\tlet shouldConvergeSize = false;\n\tlet shouldSetCursor = false;\n\tlet shouldSetSelect = false;\n\tlet shouldSetLegend = false;\n\n\tfunction _setSize(width, height, force) {\n\t\tif (force || (width != self.width || height != self.height))\n\t\t\tcalcSize(width, height);\n\n\t\tresetYSeries(false);\n\n\t\tshouldConvergeSize = true;\n\t\tshouldSetSize = true;\n\n\t\tcommit();\n\t}\n\n\tfunction calcSize(width, height) {\n\t//\tlog(\"calcSize()\", arguments);\n\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb.left   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb.top    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb.width  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb.height = incrRound(plotHgtCss * pxRatio, 0.5);\n\n\t//\tupdOriDims();\n\t}\n\n\t// ensures size calc convergence\n\tconst CYCLE_LIMIT = 3;\n\n\tfunction convergeSize() {\n\t\tlet converged = false;\n\n\t\tlet cycleNum = 0;\n\n\t\twhile (!converged) {\n\t\t\tcycleNum++;\n\n\t\t\tlet axesConverged = axesCalc(cycleNum);\n\t\t\tlet paddingConverged = paddingCalc(cycleNum);\n\n\t\t\tconverged = cycleNum == CYCLE_LIMIT || (axesConverged && paddingConverged);\n\n\t\t\tif (!converged) {\n\t\t\t\tcalcSize(self.width, self.height);\n\t\t\t\tshouldSetSize = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet {side, _size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.label != null ? axis.labelSize : 0;\n\n\t\t\t\tlet fullSize = _size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsidesWithAxes[0] = hasTopAxis;\n\t\tsidesWithAxes[1] = hasRgtAxis;\n\t\tsidesWithAxes[2] = hasBtmAxis;\n\t\tsidesWithAxes[3] = hasLftAxis;\n\n\t\t// hz padding\n\t\tplotWidCss -= _padding[1] + _padding[3];\n\t\tplotLftCss += _padding[3];\n\n\t\t// vt padding\n\t\tplotHgtCss -= _padding[2] + _padding[0];\n\t\tplotTopCss += _padding[0];\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet side = axis.side;\n\n\t\t\t\taxis._pos = incrOffset(side, axis._size);\n\n\t\t\t\tif (axis.label != null)\n\t\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t\t}\n\t\t});\n\t}\n\n\tif (cursor.dataIdx == null) {\n\t\tlet hov = cursor.hover;\n\n\t\tlet skip = hov.skip = new Set(hov.skip ?? []);\n\t\tskip.add(void 0); // alignment artifacts\n\t\tlet prox = hov.prox = fnOrSelf(hov.prox);\n\t\tlet bias = hov.bias ??= 0;\n\n\t\t// TODO: only scan between in-view idxs (i0, i1)\n\t\tcursor.dataIdx = (self, seriesIdx, cursorIdx, valAtPosX) => {\n\t\t\tif (seriesIdx == 0)\n\t\t\t\treturn cursorIdx;\n\n\t\t\tlet idx2 = cursorIdx;\n\n\t\t\tlet _prox = prox(self, seriesIdx, cursorIdx, valAtPosX) ?? inf;\n\t\t\tlet withProx = _prox >= 0 && _prox < inf;\n\t\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss;\n\t\t\tlet cursorLft = cursor.left;\n\n\t\t\tlet xValues = data[0];\n\t\t\tlet yValues = data[seriesIdx];\n\n\t\t\tif (skip.has(yValues[cursorIdx])) {\n\t\t\t\tidx2 = null;\n\n\t\t\t\tlet nonNullLft = null,\n\t\t\t\t\tnonNullRgt = null,\n\t\t\t\t\tj;\n\n\t\t\t\tif (bias == 0 || bias == -1) {\n\t\t\t\t\tj = cursorIdx;\n\t\t\t\t\twhile (nonNullLft == null && j-- > 0) {\n\t\t\t\t\t\tif (!skip.has(yValues[j]))\n\t\t\t\t\t\t\tnonNullLft = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (bias == 0 || bias == 1) {\n\t\t\t\t\tj = cursorIdx;\n\t\t\t\t\twhile (nonNullRgt == null && j++ < yValues.length) {\n\t\t\t\t\t\tif (!skip.has(yValues[j]))\n\t\t\t\t\t\t\tnonNullRgt = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (nonNullLft != null || nonNullRgt != null) {\n\t\t\t\t\tif (withProx) {\n\t\t\t\t\t\tlet lftPos = nonNullLft == null ? -Infinity : valToPosX(xValues[nonNullLft], scaleX, xDim, 0);\n\t\t\t\t\t\tlet rgtPos = nonNullRgt == null ?  Infinity : valToPosX(xValues[nonNullRgt], scaleX, xDim, 0);\n\n\t\t\t\t\t\tlet lftDelta = cursorLft - lftPos;\n\t\t\t\t\t\tlet rgtDelta = rgtPos - cursorLft;\n\n\t\t\t\t\t\tif (lftDelta <= rgtDelta) {\n\t\t\t\t\t\t\tif (lftDelta <= _prox)\n\t\t\t\t\t\t\t\tidx2 = nonNullLft;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (rgtDelta <= _prox)\n\t\t\t\t\t\t\t\tidx2 = nonNullRgt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tidx2 =\n\t\t\t\t\t\t\tnonNullRgt == null ? nonNullLft :\n\t\t\t\t\t\t\tnonNullLft == null ? nonNullRgt :\n\t\t\t\t\t\t\tcursorIdx - nonNullLft <= nonNullRgt - cursorIdx ? nonNullLft : nonNullRgt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (withProx) {\n\t\t\t\tlet dist = abs(cursorLft - valToPosX(xValues[cursorIdx], scaleX, xDim, 0));\n\n\t\t\t\tif (dist > _prox)\n\t\t\t\t\tidx2 = null;\n\t\t\t}\n\n\t\t\treturn idx2;\n\t\t};\n\t}\n\n\tconst setCursorEvent = e => { cursor.event = e; };\n\n\tcursor.idxs = activeIdxs;\n\n\tcursor._lock = false;\n\n\tlet points = cursor.points;\n\n\tpoints.show   = fnOrSelf(points.show);\n\tpoints.size   = fnOrSelf(points.size);\n\tpoints.stroke = fnOrSelf(points.stroke);\n\tpoints.width  = fnOrSelf(points.width);\n\tpoints.fill   = fnOrSelf(points.fill);\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3}, cursor.focus);\n\n\tconst cursorFocus = focus.prox >= 0;\n\tconst cursorOnePt = cursorFocus && points.one;\n\n\t// series-intersection markers\n\tlet cursorPts = [];\n\t// position caches in CSS pixels\n\tlet cursorPtsLft = [];\n\tlet cursorPtsTop = [];\n\n\tfunction initCursorPt(s, si) {\n\t\tlet pt = points.show(self, si);\n\n\t\tif (pt instanceof HTMLElement) {\n\t\t\taddClass(pt, CURSOR_PT);\n\t\t\taddClass(pt, s.class);\n\t\t\telTrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\treturn pt;\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\tif (mode == 1 || i > 0) {\n\t\t\tlet isTime = mode == 1 && scales[s.scale].time;\n\n\t\t\tlet sv = s.value;\n\t\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\t\t}\n\n\t\tif (cursorOnePt || i > 0) {\n\t\t\ts.width  = s.width == null ? 1 : s.width;\n\t\t\ts.paths  = s.paths || linearPath || retNull;\n\t\t\ts.fillTo = fnOrSelf(s.fillTo || seriesFillTo);\n\t\t\ts.pxAlign = +ifNull(s.pxAlign, pxAlign);\n\t\t\ts.pxRound = pxRoundGen(s.pxAlign);\n\n\t\t\ts.stroke = fnOrSelf(s.stroke || null);\n\t\t\ts.fill   = fnOrSelf(s.fill || null);\n\t\t\ts._stroke = s._fill = s._paths = s._focus = null;\n\n\t\t\tlet _ptDia = ptDia(max(1, s.width), 1);\n\t\t\tlet points = s.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t\tstroke: s.stroke,\n\t\t\t\tspace: _ptDia * 2,\n\t\t\t\tpaths: pointsPath,\n\t\t\t\t_stroke: null,\n\t\t\t\t_fill: null,\n\t\t\t}, s.points);\n\t\t\tpoints.show   = fnOrSelf(points.show);\n\t\t\tpoints.filter = fnOrSelf(points.filter);\n\t\t\tpoints.fill   = fnOrSelf(points.fill);\n\t\t\tpoints.stroke = fnOrSelf(points.stroke);\n\t\t\tpoints.paths  = fnOrSelf(points.paths);\n\t\t\tpoints.pxAlign = s.pxAlign;\n\t\t}\n\n\t\tif (showLegend) {\n\t\t\tlet rowCells = initLegendRow(s, i);\n\t\t\tlegendRows.splice(i, 0, rowCells[0]);\n\t\t\tlegendCells.splice(i, 0, rowCells[1]);\n\t\t\tlegend.values.push(null);\t// NULL_LEGEND_VALS not yet avil here :(\n\t\t}\n\n\t\tif (showCursor) {\n\t\t\tactiveIdxs.splice(i, 0, null);\n\n\t\t\tlet pt = null;\n\n\t\t\tif (cursorOnePt) {\n\t\t\t\tif (i == 0)\n\t\t\t\t\tpt = initCursorPt(s, i);\n\t\t\t}\n\t\t\telse if (i > 0)\n\t\t\t\tpt = initCursorPt(s, i);\n\n\t\t\tcursorPts.splice(i, 0, pt);\n\t\t\tcursorPtsLft.splice(i, 0, 0);\n\t\t\tcursorPtsTop.splice(i, 0, 0);\n\t\t}\n\n\t\tfire(\"addSeries\", i);\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = mode == 1 ? setDefault(opts, si, xSeriesOpts, ySeriesOpts) : setDefault(opts, si, {}, xySeriesOpts);\n\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\n\t\tif (showLegend) {\n\t\t\tlegend.values.splice(i, 1);\n\n\t\t\tlegendCells.splice(i, 1);\n\t\t\tlet tr = legendRows.splice(i, 1)[0];\n\t\t\toffMouse(null, tr.firstChild);\n\t\t\ttr.remove();\n\t\t}\n\n\t\tif (showCursor) {\n\t\t\tactiveIdxs.splice(i, 1);\n\t\t\tcursorPts.splice(i, 1)[0].remove();\n\t\t\tcursorPtsLft.splice(i, 1);\n\t\t\tcursorPtsTop.splice(i, 1);\n\t\t}\n\n\t\t// TODO: de-init no-longer-needed scales?\n\n\t\tfire(\"delSeries\", i);\n\t}\n\n\tself.delSeries = delSeries;\n\n\tconst sidesWithAxes = [false, false, false, false];\n\n\tfunction initAxis(axis, i) {\n\t\taxis._show = axis.show;\n\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime = sc.time;\n\n\t\t\taxis.size   = fnOrSelf(axis.size);\n\t\t\taxis.space  = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\n\t\t\tif (isArr(axis.incrs)) {\n\t\t\t\taxis.incrs.forEach(incr => {\n\t\t\t\t\t!fixedDec.has(incr) && fixedDec.set(incr, guessDec(incr));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\taxis.incrs  = fnOrSelf(axis.incrs  || (          sc.distr == 2 ? wholeIncrs : (isTime ? (ms == 1 ? timeIncrsMs : timeIncrsS) : numIncrs)));\n\t\t\taxis.splits = fnOrSelf(axis.splits || (isTime && sc.distr == 1 ? _timeAxisSplits : sc.distr == 3 ? logAxisSplits : sc.distr == 4 ? asinhAxisSplits : numAxisSplits));\n\n\t\t\taxis.stroke        = fnOrSelf(axis.stroke);\n\t\t\taxis.grid.stroke   = fnOrSelf(axis.grid.stroke);\n\t\t\taxis.ticks.stroke  = fnOrSelf(axis.ticks.stroke);\n\t\t\taxis.border.stroke = fnOrSelf(axis.border.stroke);\n\n\t\t\tlet av = axis.values;\n\n\t\t\taxis.values = (\n\t\t\t\t// static array of tick values\n\t\t\t\tisArr(av) && !isArr(av[0]) ? fnOrSelf(av) :\n\t\t\t\t// temporal\n\t\t\t\tisTime ? (\n\t\t\t\t\t// config array of fmtDate string tpls\n\t\t\t\t\tisArr(av) ?\n\t\t\t\t\t\ttimeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) :\n\t\t\t\t\t// fmtDate string tpl\n\t\t\t\t\tisStr(av) ?\n\t\t\t\t\t\ttimeAxisVal(_tzDate, av) :\n\t\t\t\t\tav || _timeAxisVals\n\t\t\t\t) : av || numAxisVals\n\t\t\t);\n\n\t\t\taxis.filter = fnOrSelf(axis.filter || (          sc.distr >= 3 && sc.log == 10 ? log10AxisValsFilt : sc.distr == 3 && sc.log == 2 ? log2AxisValsFilt : retArg1));\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\n\t\t\taxis._size   = axis.size(self, null, i, 0);\n\n\t\t\taxis._space  =\n\t\t\taxis._rotate =\n\t\t\taxis._incrs  =\n\t\t\taxis._found  =\t// foundIncrSpace\n\t\t\taxis._splits =\n\t\t\taxis._values = null;\n\n\t\t\tif (axis._size > 0) {\n\t\t\t\tsidesWithAxes[i] = true;\n\t\t\t\taxis._el = placeDiv(AXIS, wrap);\n\t\t\t}\n\n\t\t\t// debug\n\t\t//\taxis._el.style.background = \"#\"  + Math.floor(Math.random()*16777215).toString(16) + '80';\n\t\t}\n\t}\n\n\tfunction autoPadSide(self, side, sidesWithAxes, cycleNum) {\n\t\tlet [hasTopAxis, hasRgtAxis, hasBtmAxis, hasLftAxis] = sidesWithAxes;\n\n\t\tlet ori = side % 2;\n\t\tlet size = 0;\n\n\t\tif (ori == 0 && (hasLftAxis || hasRgtAxis))\n\t\t\tsize = (side == 0 && !hasTopAxis || side == 2 && !hasBtmAxis ? round(xAxisOpts.size / 3) : 0);\n\t\tif (ori == 1 && (hasTopAxis || hasBtmAxis))\n\t\t\tsize = (side == 1 && !hasRgtAxis || side == 3 && !hasLftAxis ? round(yAxisOpts.size / 2) : 0);\n\n\t\treturn size;\n\t}\n\n\tconst padding = self.padding = (opts.padding || [autoPadSide,autoPadSide,autoPadSide,autoPadSide]).map(p => fnOrSelf(ifNull(p, autoPadSide)));\n\tconst _padding = self._padding = padding.map((p, i) => p(self, i, sidesWithAxes, 0));\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = mode == 1 ? series[0].idxs : null;\n\n\tlet data0 = null;\n\n\tlet viaAutoScaleX = false;\n\n\tfunction setData(_data, _resetScales) {\n\t\tdata = _data == null ? [] : _data;\n\n\t\tself.data = self._data = data;\n\n\t\tif (mode == 2) {\n\t\t\tdataLen = 0;\n\t\t\tfor (let i = 1; i < series.length; i++)\n\t\t\t\tdataLen += data[i][0].length;\n\t\t}\n\t\telse {\n\t\t\tif (data.length == 0)\n\t\t\t\tself.data = self._data = data = [[]];\n\n\t\t\tdata0 = data[0];\n\t\t\tdataLen = data0.length;\n\n\t\t\tlet scaleData = data;\n\n\t\t\tif (xScaleDistr == 2) {\n\t\t\t\tscaleData = data.slice();\n\n\t\t\t\tlet _data0 = scaleData[0] = Array(dataLen);\n\t\t\t\tfor (let i = 0; i < dataLen; i++)\n\t\t\t\t\t_data0[i] = i;\n\t\t\t}\n\n\t\t\tself._data = data = scaleData;\n\t\t}\n\n\t\tresetYSeries(true);\n\n\t\tfire(\"setData\");\n\n\t\t// forces x axis tick values to re-generate when neither x scale nor y scale changes\n\t\t// in ordinal mode, scale range is by index, so will not change if new data has same length, but tick values are from data\n\t\tif (xScaleDistr == 2) {\n\t\t\tshouldConvergeSize = true;\n\n\t\t\t/* or somewhat cheaper, and uglier:\n\t\t\tif (ready) {\n\t\t\t\t// logic extracted from axesCalc()\n\t\t\t\tlet i = 0;\n\t\t\t\tlet axis = axes[i];\n\t\t\t\tlet _splits = axis._splits.map(i => data0[i]);\n\t\t\t\tlet [_incr, _space] = axis._found;\n\t\t\t\tlet incr = data0[_splits[1]] - data0[_splits[0]];\n\t\t\t\taxis._values = axis.values(self, axis.filter(self, _splits, i, _space, incr), i, _space, incr);\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tif (_resetScales !== false) {\n\t\t\tlet xsc = scaleX;\n\n\t\t\tif (xsc.auto(self, viaAutoScaleX))\n\t\t\t\tautoScaleX();\n\t\t\telse\n\t\t\t\t_setScale(xScaleKey, xsc.min, xsc.max);\n\n\t\t\tshouldSetCursor = shouldSetCursor || cursor.left >= 0;\n\t\t\tshouldSetLegend = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\tviaAutoScaleX = true;\n\n\t\tlet _min, _max;\n\n\t\tif (mode == 1) {\n\t\t\tif (dataLen > 0) {\n\t\t\t\ti0 = idxs[0] = 0;\n\t\t\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\t\t\t_min = data[0][i0];\n\t\t\t\t_max = data[0][i1];\n\n\t\t\t\tif (xScaleDistr == 2) {\n\t\t\t\t\t_min = i0;\n\t\t\t\t\t_max = i1;\n\t\t\t\t}\n\t\t\t\telse if (_min == _max) {\n\t\t\t\t\tif (xScaleDistr == 3)\n\t\t\t\t\t\t[_min, _max] = rangeLog(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (xScaleDistr == 4)\n\t\t\t\t\t\t[_min, _max] = rangeAsinh(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (scaleX.time)\n\t\t\t\t\t\t_max = _min + round(86400 / ms);\n\t\t\t\t\telse\n\t\t\t\t\t\t[_min, _max] = rangeNum(_min, _max, rangePad, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ti0 = idxs[0] = _min = null;\n\t\t\t\ti1 = idxs[1] = _max = null;\n\t\t\t}\n\t\t}\n\n\t\t_setScale(xScaleKey, _min, _max);\n\t}\n\n\tlet ctxStroke, ctxFill, ctxWidth, ctxDash, ctxJoin, ctxCap, ctxFont, ctxAlign, ctxBaseline;\n\tlet ctxAlpha;\n\n\tfunction setCtxStyle(stroke, width, dash, cap, fill, join) {\n\t\tstroke ??= transparent;\n\t\tdash   ??= EMPTY_ARR;\n\t\tcap    ??= \"butt\"; // (\u203F|\u203F)\n\t\tfill   ??= transparent;\n\t\tjoin   ??= \"round\";\n\n\t\tif (stroke != ctxStroke)\n\t\t\tctx.strokeStyle = ctxStroke = stroke;\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (width != ctxWidth)\n\t\t\tctx.lineWidth = ctxWidth = width;\n\t\tif (join != ctxJoin)\n\t\t\tctx.lineJoin = ctxJoin = join;\n\t\tif (cap != ctxCap)\n\t\t\tctx.lineCap = ctxCap = cap;\n\t\tif (dash != ctxDash)\n\t\t\tctx.setLineDash(ctxDash = dash);\n\t}\n\n\tfunction setFontStyle(font, fill, align, baseline) {\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (font != ctxFont)\n\t\t\tctx.font = ctxFont = font;\n\t\tif (align != ctxAlign)\n\t\t\tctx.textAlign = ctxAlign = align;\n\t\tif (baseline != ctxBaseline)\n\t\t\tctx.textBaseline = ctxBaseline = baseline;\n\t}\n\n\tfunction accScale(wsc, psc, facet, data, sorted = 0) {\n\t\tif (data.length > 0 && wsc.auto(self, viaAutoScaleX) && (psc == null || psc.min == null)) {\n\t\t\tlet _i0 = ifNull(i0, 0);\n\t\t\tlet _i1 = ifNull(i1, data.length - 1);\n\n\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\tlet minMax = facet.min == null ? getMinMax(data, _i0, _i1, sorted, wsc.distr == 3) : [facet.min, facet.max];\n\n\t\t\t// initial min/max\n\t\t\twsc.min = min(wsc.min, facet.min = minMax[0]);\n\t\t\twsc.max = max(wsc.max, facet.max = minMax[1]);\n\t\t}\n\t}\n\n\tconst AUTOSCALE = {min: null, max: null};\n\n\tfunction setScales() {\n\t//\tlog(\"setScales()\", arguments);\n\n\t\t// implicitly add auto scales, and unranged scales\n\t\tfor (let k in scales) {\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (pendScales[k] == null &&\n\t\t\t\t(\n\t\t\t\t\t// scales that have never been set (on init)\n\t\t\t\t\tsc.min == null ||\n\t\t\t\t\t// or auto scales when the x scale was explicitly set\n\t\t\t\t\tpendScales[xScaleKey] != null && sc.auto(self, viaAutoScaleX)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tpendScales[k] = AUTOSCALE;\n\t\t\t}\n\t\t}\n\n\t\t// implicitly add dependent scales\n\t\tfor (let k in scales) {\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (pendScales[k] == null && sc.from != null && pendScales[sc.from] != null)\n\t\t\t\tpendScales[k] = AUTOSCALE;\n\t\t}\n\n\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\tif (pendScales[xScaleKey] != null)\n\t\t\tresetYSeries(true); // TODO: only reset series on auto scales?\n\n\t\tlet wipScales = {};\n\n\t\tfor (let k in pendScales) {\n\t\t\tlet psc = pendScales[k];\n\n\t\t\tif (psc != null) {\n\t\t\t\tlet wsc = wipScales[k] = copy(scales[k], fastIsObj);\n\n\t\t\t\tif (psc.min != null)\n\t\t\t\t\tassign(wsc, psc);\n\t\t\t\telse if (k != xScaleKey || mode == 2) {\n\t\t\t\t\tif (dataLen == 0 && wsc.from == null) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, null, null, k);\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twsc.min = inf;\n\t\t\t\t\t\twsc.max = -inf;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataLen > 0) {\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 1) {\n\t\t\t\t\tlet k = s.scale;\n\t\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\t\tif (psc == null)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max, k);\n\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t\t// don't try to contract same or adjacent idxs\n\t\t\t\t\t\tif (i1 - i0 > 1) {\n\t\t\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\t\t\ti0++;\n\t\t\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\t\t\ti1--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t\t}\n\t\t\t\t\telse if (s.show && s.auto)\n\t\t\t\t\t\taccScale(wsc, psc, s, data[i], s.sorted);\n\n\t\t\t\t\ts.idxs[0] = i0;\n\t\t\t\t\ts.idxs[1] = i1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tif (s.show && s.auto) {\n\t\t\t\t\t\t\t// TODO: only handles, assumes and requires facets[0] / 'x' scale, and facets[1] / 'y' scale\n\t\t\t\t\t\t\tlet [ xFacet, yFacet ] = s.facets;\n\t\t\t\t\t\t\tlet xScaleKey = xFacet.scale;\n\t\t\t\t\t\t\tlet yScaleKey = yFacet.scale;\n\t\t\t\t\t\t\tlet [ xData, yData ] = data[i];\n\n\t\t\t\t\t\t\tlet wscx = wipScales[xScaleKey];\n\t\t\t\t\t\t\tlet wscy = wipScales[yScaleKey];\n\n\t\t\t\t\t\t\t// null can happen when only x is zoomed, but y has static range and doesnt get auto-added to pending\n\t\t\t\t\t\t\twscx != null && accScale(wscx, pendScales[xScaleKey], xFacet, xData, xFacet.sorted);\n\t\t\t\t\t\t\twscy != null && accScale(wscy, pendScales[yScaleKey], yFacet, yData, yFacet.sorted);\n\n\t\t\t\t\t\t\t// temp\n\t\t\t\t\t\t\ts.min = yFacet.min;\n\t\t\t\t\t\t\ts.max = yFacet.max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (wsc.from == null && (psc == null || psc.min == null)) {\n\t\t\t\t\tlet minMax = wsc.range(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\twsc.min ==  inf ? null : wsc.min,\n\t\t\t\t\t\twsc.max == -inf ? null : wsc.max,\n\t\t\t\t\t\tk\n\t\t\t\t\t);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// range dependent scales\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\n\t\t\tif (wsc.from != null) {\n\t\t\t\tlet base = wipScales[wsc.from];\n\n\t\t\t\tif (base.min == null)\n\t\t\t\t\twsc.min = wsc.max = null;\n\t\t\t\telse {\n\t\t\t\t\tlet minMax = wsc.range(self, base.min, base.max, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet changed = {};\n\t\tlet anyChanged = false;\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\tsc.min = wsc.min;\n\t\t\t\tsc.max = wsc.max;\n\n\t\t\t\tlet distr = sc.distr;\n\n\t\t\t\tsc._min = distr == 3 ? log10(sc.min) : distr == 4 ? asinh(sc.min, sc.asinh) : distr == 100 ? sc.fwd(sc.min) : sc.min;\n\t\t\t\tsc._max = distr == 3 ? log10(sc.max) : distr == 4 ? asinh(sc.max, sc.asinh) : distr == 100 ? sc.fwd(sc.max) : sc.max;\n\n\t\t\t\tchanged[k] = anyChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (anyChanged) {\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 2) {\n\t\t\t\t\tif (i > 0 && changed.y)\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (changed[s.scale])\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (let k in changed) {\n\t\t\t\tshouldConvergeSize = true;\n\t\t\t\tfire(\"setScale\", k);\n\t\t\t}\n\n\t\t\tif (showCursor && cursor.left >= 0)\n\t\t\t\tshouldSetCursor = shouldSetLegend = true;\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tfunction drawSeries() {\n\t\tif (dataLen > 0) {\n\t\t\tlet shouldAlpha = series.some(s => s._focus) && ctxAlpha != focus.alpha;\n\n\t\t\tif (shouldAlpha)\n\t\t\t\tctx.globalAlpha = ctxAlpha = focus.alpha;\n\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tcacheStrokeFill(i, false);\n\t\t\t\t\tcacheStrokeFill(i, true);\n\n\t\t\t\t\tif (s._paths == null) {\n\t\t\t\t\t\tlet _ctxAlpha = ctxAlpha;\n\n\t\t\t\t\t\tif (ctxAlpha != s.alpha)\n\t\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = s.alpha;\n\n\t\t\t\t\t\tlet _idxs = mode == 2 ? [0, data[i][0].length - 1] : getOuterIdxs(data[i]);\n\t\t\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\n\t\t\t\t\t\tif (ctxAlpha != _ctxAlpha)\n\t\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = _ctxAlpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet _ctxAlpha = ctxAlpha;\n\n\t\t\t\t\tif (ctxAlpha != s.alpha)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = s.alpha;\n\n\t\t\t\t\ts._paths != null && drawPath(i, false);\n\n\t\t\t\t\t{\n\t\t\t\t\t\tlet _gaps = s._paths != null ? s._paths.gaps : null;\n\n\t\t\t\t\t\tlet show = s.points.show(self, i, i0, i1, _gaps);\n\t\t\t\t\t\tlet idxs = s.points.filter(self, i, show, _gaps);\n\n\t\t\t\t\t\tif (show || idxs) {\n\t\t\t\t\t\t\ts.points._paths = s.points.paths(self, i, i0, i1, idxs);\n\t\t\t\t\t\t\tdrawPath(i, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ctxAlpha != _ctxAlpha)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = _ctxAlpha;\n\n\t\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (shouldAlpha)\n\t\t\t\tctx.globalAlpha = ctxAlpha = 1;\n\t\t}\n\t}\n\n\tfunction cacheStrokeFill(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\ts._stroke = s.stroke(self, si);\n\t\ts._fill   = s.fill(self, si);\n\t}\n\n\tfunction drawPath(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\tlet {\n\t\t\tstroke,\n\t\t\tfill,\n\t\t\tclip: gapsClip,\n\t\t\tflags,\n\n\t\t\t_stroke: strokeStyle = s._stroke,\n\t\t\t_fill:   fillStyle   = s._fill,\n\t\t\t_width:  width       = s.width,\n\t\t} = s._paths;\n\n\t\twidth = roundDec(width * pxRatio, 3);\n\n\t\tlet boundsClip = null;\n\t\tlet offset = (width % 2) / 2;\n\n\t\tif (_points && fillStyle == null)\n\t\t\tfillStyle = width > 0 ? \"#fff\" : strokeStyle;\n\n\t\tlet _pxAlign = s.pxAlign == 1 && offset > 0;\n\n\t\t_pxAlign && ctx.translate(offset, offset);\n\n\t\tif (!_points) {\n\t\t\tlet lft = plotLft - width / 2,\n\t\t\t\ttop = plotTop - width / 2,\n\t\t\t\twid = plotWid + width,\n\t\t\t\thgt = plotHgt + width;\n\n\t\t\tboundsClip = new Path2D();\n\t\t\tboundsClip.rect(lft, top, wid, hgt);\n\t\t}\n\n\t\t// the points pathbuilder's gapsClip is its boundsClip, since points dont need gaps clipping, and bounds depend on point size\n\t\tif (_points)\n\t\t\tstrokeFill(strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, gapsClip);\n\t\telse\n\t\t\tfillStroke(si, strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, boundsClip, gapsClip);\n\n\t\t_pxAlign && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction fillStroke(si, strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip) {\n\t\tlet didStrokeFill = false;\n\n\t\t// for all bands where this series is the top edge, create upwards clips using the bottom edges\n\t\t// and apply clips + fill with band fill or dfltFill\n\t\tflags != 0 && bands.forEach((b, bi) => {\n\t\t\t// isUpperEdge?\n\t\t\tif (b.series[0] == si) {\n\t\t\t\tlet lowerEdge = series[b.series[1]];\n\t\t\t\tlet lowerData = data[b.series[1]];\n\n\t\t\t\tlet bandClip = (lowerEdge._paths || EMPTY_OBJ).band;\n\n\t\t\t\tif (isArr(bandClip))\n\t\t\t\t\tbandClip = b.dir == 1 ? bandClip[0] : bandClip[1];\n\n\t\t\t\tlet gapsClip2;\n\n\t\t\t\tlet _fillStyle = null;\n\n\t\t\t\t// hasLowerEdge?\n\t\t\t\tif (lowerEdge.show && bandClip && hasData(lowerData, i0, i1)) {\n\t\t\t\t\t_fillStyle = b.fill(self, bi) || fillStyle;\n\t\t\t\t\tgapsClip2 = lowerEdge._paths.clip;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbandClip = null;\n\n\t\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, _fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip);\n\n\t\t\t\tdidStrokeFill = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!didStrokeFill)\n\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip);\n\t}\n\n\tconst CLIP_FILL_STROKE = BAND_CLIP_FILL | BAND_CLIP_STROKE;\n\n\tfunction strokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip) {\n\t\tsetCtxStyle(strokeStyle, lineWidth, lineDash, lineCap, fillStyle);\n\n\t\tif (boundsClip || gapsClip || bandClip) {\n\t\t\tctx.save();\n\t\t\tboundsClip && ctx.clip(boundsClip);\n\t\t\tgapsClip && ctx.clip(gapsClip);\n\t\t}\n\n\t\tif (bandClip) {\n\t\t\tif ((flags & CLIP_FILL_STROKE) == CLIP_FILL_STROKE) {\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_STROKE) {\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_FILL) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.restore();\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdoFill(fillStyle, fillPath);\n\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t}\n\n\t\tif (boundsClip || gapsClip || bandClip)\n\t\t\tctx.restore();\n\t}\n\n\tfunction doStroke(strokeStyle, strokePath, lineWidth) {\n\t\tif (lineWidth > 0) {\n\t\t\tif (strokePath instanceof Map) {\n\t\t\t\tstrokePath.forEach((strokePath, strokeStyle) => {\n\t\t\t\t\tctx.strokeStyle = ctxStroke = strokeStyle;\n\t\t\t\t\tctx.stroke(strokePath);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tstrokePath != null && strokeStyle && ctx.stroke(strokePath);\n\t\t}\n\t}\n\n\tfunction doFill(fillStyle, fillPath) {\n\t\tif (fillPath instanceof Map) {\n\t\t\tfillPath.forEach((fillPath, fillStyle) => {\n\t\t\t\tctx.fillStyle = ctxFill = fillStyle;\n\t\t\t\tctx.fill(fillPath);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t\tfillPath != null && fillStyle && ctx.fill(fillPath);\n\t}\n\n\tfunction getIncrSpace(axisIdx, min, max, fullDim) {\n\t\tlet axis = axes[axisIdx];\n\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis._space = axis.space(self, axisIdx, min, max, fullDim);\n\t\t\tlet incrs    = axis._incrs = axis.incrs(self, axisIdx, min, max, fullDim, minSpace);\n\t\t\tincrSpace    = findIncr(min, max, incrs, fullDim, minSpace);\n\t\t}\n\n\t\treturn (axis._found = incrSpace);\n\t}\n\n\tfunction drawOrthoLines(offs, filts, ori, side, pos0, len, width, stroke, dash, cap) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tpxAlign == 1 && ctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash, cap, stroke);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\tfor (let i = 0; i < offs.length; i++) {\n\t\t\tif (filts[i] != null) {\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx0 = x1 = offs[i];\n\t\t\t\telse\n\t\t\t\t\ty0 = y1 = offs[i];\n\n\t\t\t\tctx.moveTo(x0, y0);\n\t\t\t\tctx.lineTo(x1, y1);\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\n\t\tpxAlign == 1 && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction axesCalc(cycleNum) {\n\t//\tlog(\"axesCalc()\", arguments);\n\n\t\tlet converged = true;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tif (scale.min == null) {\n\t\t\t\tif (axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = false;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = true;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\t\t// \t\t// should this toggle them ._show = false\n\n\t\t\tlet [_incr, _space] = getIncrSpace(i, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\tif (_space == 0)\n\t\t\t\treturn;\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet _splits = axis._splits = axis.splits(self, i, min, max, _incr, _space, forceMin);\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet values = axis._values = axis.values(self, axis.filter(self, splits, i, _space, incr), i, _space, incr);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\taxis._rotate = side == 2 ? axis.rotate(self, values, i, _space) : 0;\n\n\t\t\tlet oldSize = axis._size;\n\n\t\t\taxis._size = ceil(axis.size(self, values, i, cycleNum));\n\n\t\t\tif (oldSize != null && axis._size != oldSize)\t\t\t// ready && ?\n\t\t\t\tconverged = false;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction paddingCalc(cycleNum) {\n\t\tlet converged = true;\n\n\t\tpadding.forEach((p, i) => {\n\t\t\tlet _p = p(self, i, sidesWithAxes, cycleNum);\n\n\t\t\tif (_p != _padding[i])\n\t\t\t\tconverged = false;\n\n\t\t\t_padding[i] = _p;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction drawAxesGrid() {\n\t\tfor (let i = 0; i < axes.length; i++) {\n\t\t\tlet axis = axes[i];\n\n\t\t\tif (!axis.show || !axis._show)\n\t\t\t\tcontinue;\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet x, y;\n\n\t\t\tlet fillStyle = axis.stroke(self, i);\n\n\t\t\tlet shiftDir = side == 0 || side == 3 ? -1 : 1;\n\n\t\t\tlet [_incr, _space] = axis._found;\n\n\t\t\t// axis label\n\t\t\tif (axis.label != null) {\n\t\t\t\tlet shiftAmt = axis.labelGap * shiftDir;\n\t\t\t\tlet baseLpos = round((axis._lpos + shiftAmt) * pxRatio);\n\n\t\t\t\tsetFontStyle(axis.labelFont[0], fillStyle, \"center\", side == 2 ? TOP : BOTTOM);\n\n\t\t\t\tctx.save();\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tlet _label = isFn(axis.label) ? axis.label(self, i, _incr, _space) : axis.label;\n\n\t\t\t\tctx.fillText(_label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tif (_space == 0)\n\t\t\t\tcontinue;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet _splits = axis._splits;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet border = axis.border;\n\t\t\tlet _tickSize = ticks.show ? ticks.size : 0;\n\t\t\tlet tickSize = round(_tickSize * pxRatio);\n\t\t\tlet axisGap = round((axis.alignTo == 2 ? axis._size - _tickSize - axis.gap : axis.gap) * pxRatio);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = axis._rotate * -PI/180;\n\n\t\t\tlet basePos  = pxRound(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = (tickSize + axisGap) * shiftDir;\n\t\t\tlet finalPos = basePos + shiftAmt;\n\t\t\t    y        = ori == 0 ? finalPos : 0;\n\t\t\t    x        = ori == 1 ? finalPos : 0;\n\n\t\t\tlet font         = axis.font[0];\n\t\t\tlet textAlign    = axis.align == 1 ? LEFT :\n\t\t\t                   axis.align == 2 ? RIGHT :\n\t\t\t                   angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tlet textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tsetFontStyle(font, fillStyle, textAlign, textBaseline);\n\n\t\t\tlet lineHeight = axis.font[1] * axis.lineGap;\n\n\t\t\tlet canOffs = _splits.map(val => pxRound(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\tlet _values = axis._values;\n\n\t\t\tfor (let i = 0; i < _values.length; i++) {\n\t\t\t\tlet val = _values[i];\n\n\t\t\t\tif (val != null) {\n\t\t\t\t\tif (ori == 0)\n\t\t\t\t\t\tx = canOffs[i];\n\t\t\t\t\telse\n\t\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t\tval = \"\" + val;\n\n\t\t\t\t\tlet _parts = val.indexOf(\"\\n\") == -1 ? [val] : val.split(/\\n/gm);\n\n\t\t\t\t\tfor (let j = 0; j < _parts.length; j++) {\n\t\t\t\t\t\tlet text = _parts[j];\n\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(x, y + j * lineHeight); // can this be replaced with position math?\n\t\t\t\t\t\t\tctx.rotate(angle); // can this be done once?\n\t\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tticks.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\troundDec(ticks.width * pxRatio, 3),\n\t\t\t\t\tticks.stroke(self, i),\n\t\t\t\t\tticks.dash,\n\t\t\t\t\tticks.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tgrid.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(grid.width * pxRatio, 3),\n\t\t\t\t\tgrid.stroke(self, i),\n\t\t\t\t\tgrid.dash,\n\t\t\t\t\tgrid.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (border.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\t[basePos],\n\t\t\t\t\t[1],\n\t\t\t\t\tori == 0 ? 1 : 0,\n\t\t\t\t\tori == 0 ? 1 : 2,\n\t\t\t\t\tori == 1 ? plotTop : plotLft,\n\t\t\t\t\tori == 1 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(border.width * pxRatio, 3),\n\t\t\t\t\tborder.stroke(self, i),\n\t\t\t\t\tborder.dash,\n\t\t\t\t\tborder.cap,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries(minMax) {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts._paths = null;\n\n\t\t\t\tif (minMax) {\n\t\t\t\t\tif (mode == 1) {\n\t\t\t\t\t\ts.min = null;\n\t\t\t\t\t\ts.max = null;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ts.facets.forEach(f => {\n\t\t\t\t\t\t\tf.min = null;\n\t\t\t\t\t\t\tf.max = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tlet queuedCommit = false;\n\tlet deferHooks = false;\n\tlet hooksQueue = [];\n\n\tfunction flushHooks() {\n\t\tdeferHooks = false;\n\n\t\tfor (let i = 0; i < hooksQueue.length; i++)\n\t\t\tfire(...hooksQueue[i]);\n\n\t\thooksQueue.length = 0;\n\t}\n\n\tfunction commit() {\n\t\tif (!queuedCommit) {\n\t\t\tmicroTask(_commit);\n\t\t\tqueuedCommit = true;\n\t\t}\n\t}\n\n\t// manual batching (aka immediate mode), skips microtask queue\n\tfunction batch(fn, _deferHooks = false) {\n\t\tqueuedCommit = true;\n\t\tdeferHooks = _deferHooks;\n\n\t\tfn(self);\n\t\t_commit();\n\n\t\tif (_deferHooks && hooksQueue.length > 0)\n\t\t\tqueueMicrotask(flushHooks);\n\t}\n\n\tself.batch = batch;\n\n\tfunction _commit() {\n\t//\tlog(\"_commit()\", arguments);\n\n\t\tif (shouldSetScales) {\n\t\t\tsetScales();\n\t\t\tshouldSetScales = false;\n\t\t}\n\n\t\tif (shouldConvergeSize) {\n\t\t\tconvergeSize();\n\t\t\tshouldConvergeSize = false;\n\t\t}\n\n\t\tif (shouldSetSize) {\n\t\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\t\t// NOTE: mutating this during print preview in Chrome forces transparent\n\t\t\t// canvas pixels to white, even when followed up with clearRect() below\n\t\t\tcan.width  = round(fullWidCss * pxRatio);\n\t\t\tcan.height = round(fullHgtCss * pxRatio);\n\n\t\t\taxes.forEach(({ _el, _show, _size, _pos, side }) => {\n\t\t\t\tif (_el != null) {\n\t\t\t\t\tif (_show) {\n\t\t\t\t\t\tlet posOffset = (side === 3 || side === 0 ? _size : 0);\n\t\t\t\t\t\tlet isVt = side % 2 == 1;\n\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"left\"   : \"top\",    _pos - posOffset);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"width\"  : \"height\", _size);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"top\"    : \"left\",   isVt ? plotTopCss : plotLftCss);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"height\" : \"width\",  isVt ? plotHgtCss : plotWidCss);\n\n\t\t\t\t\t\tremClass(_el, OFF);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\taddClass(_el, OFF);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// invalidate ctx style cache\n\t\t\tctxStroke = ctxFill = ctxWidth = ctxJoin = ctxCap = ctxFont = ctxAlign = ctxBaseline = ctxDash = null;\n\t\t\tctxAlpha = 1;\n\n\t\t\tsyncRect(true);\n\n\t\t\tif (\n\t\t\t\tplotLftCss != _plotLftCss ||\n\t\t\t\tplotTopCss != _plotTopCss ||\n\t\t\t\tplotWidCss != _plotWidCss ||\n\t\t\t\tplotHgtCss != _plotHgtCss\n\t\t\t) {\n\t\t\t\tresetYSeries(false);\n\n\t\t\t\tlet pctWid = plotWidCss / _plotWidCss;\n\t\t\t\tlet pctHgt = plotHgtCss / _plotHgtCss;\n\n\t\t\t\tif (showCursor && !shouldSetCursor && cursor.left >= 0) {\n\t\t\t\t\tcursor.left *= pctWid;\n\t\t\t\t\tcursor.top  *= pctHgt;\n\n\t\t\t\t\tvCursor && elTrans(vCursor, round(cursor.left), 0, plotWidCss, plotHgtCss);\n\t\t\t\t\thCursor && elTrans(hCursor, 0, round(cursor.top), plotWidCss, plotHgtCss);\n\n\t\t\t\t\tfor (let i = 0; i < cursorPts.length; i++) {\n\t\t\t\t\t\tlet pt = cursorPts[i];\n\n\t\t\t\t\t\tif (pt != null) {\n\t\t\t\t\t\t\tcursorPtsLft[i] *= pctWid;\n\t\t\t\t\t\t\tcursorPtsTop[i] *= pctHgt;\n\t\t\t\t\t\t\telTrans(pt, ceil(cursorPtsLft[i]), ceil(cursorPtsTop[i]), plotWidCss, plotHgtCss);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (select.show && !shouldSetSelect && select.left >= 0 && select.width > 0) {\n\t\t\t\t\tselect.left   *= pctWid;\n\t\t\t\t\tselect.width  *= pctWid;\n\t\t\t\t\tselect.top    *= pctHgt;\n\t\t\t\t\tselect.height *= pctHgt;\n\n\t\t\t\t\tfor (let prop in _hideProps)\n\t\t\t\t\t\tsetStylePx(selectDiv, prop, select[prop]);\n\t\t\t\t}\n\n\t\t\t\t_plotLftCss = plotLftCss;\n\t\t\t\t_plotTopCss = plotTopCss;\n\t\t\t\t_plotWidCss = plotWidCss;\n\t\t\t\t_plotHgtCss = plotHgtCss;\n\t\t\t}\n\n\t\t\tfire(\"setSize\");\n\n\t\t\tshouldSetSize = false;\n\t\t}\n\n\t\tif (fullWidCss > 0 && fullHgtCss > 0) {\n\t\t\tctx.clearRect(0, 0, can.width, can.height);\n\t\t\tfire(\"drawClear\");\n\t\t\tdrawOrder.forEach(fn => fn());\n\t\t\tfire(\"draw\");\n\t\t}\n\n\t\tif (select.show && shouldSetSelect) {\n\t\t\tsetSelect(select);\n\t\t\tshouldSetSelect = false;\n\t\t}\n\n\t\tif (showCursor && shouldSetCursor) {\n\t\t\tupdateCursor(null, true, false);\n\t\t\tshouldSetCursor = false;\n\t\t}\n\n\t\tif (legend.show && legend.live && shouldSetLegend) {\n\t\t\tsetLegend();\n\t\t\tshouldSetLegend = false; // redundant currently\n\t\t}\n\n\t\tif (!ready) {\n\t\t\tready = true;\n\t\t\tself.status = 1;\n\n\t\t\tfire(\"ready\");\n\t\t}\n\n\t\tviaAutoScaleX = false;\n\n\t\tqueuedCommit = false;\n\t}\n\n\tself.redraw = (rebuildPaths, recalcAxes) => {\n\t\tshouldConvergeSize = recalcAxes || false;\n\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scaleX.min, scaleX.max);\n\t\telse\n\t\t\tcommit();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (dataLen == 0) {\n\t\t\t\tlet minMax = sc.range(self, opts.min, opts.max, key);\n\t\t\t\topts.min = minMax[0];\n\t\t\t\topts.max = minMax[1];\n\t\t\t}\n\n\t\t\tif (opts.min > opts.max) {\n\t\t\t\tlet _min = opts.min;\n\t\t\t\topts.min = opts.max;\n\t\t\t\topts.max = _min;\n\t\t\t}\n\n\t\t\tif (dataLen > 1 && opts.min != null && opts.max != null && opts.max - opts.min < 1e-16)\n\t\t\t\treturn;\n\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2 && dataLen > 0) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\n\t\t\t\t\tif (opts.min == opts.max)\n\t\t\t\t\t\topts.max++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tshouldSetScales = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet xCursor;\n\tlet yCursor;\n\tlet vCursor;\n\tlet hCursor;\n\n\t// starting position before cursor.move\n\tlet rawMouseLeft0;\n\tlet rawMouseTop0;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position before cursor.move\n\tlet rawMouseLeft1;\n\tlet rawMouseTop1;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag = cursor.drag;\n\n\tlet dragX = drag.x;\n\tlet dragY = drag.y;\n\n\tif (showCursor) {\n\t\tif (cursor.x)\n\t\t\txCursor = placeDiv(CURSOR_X, over);\n\t\tif (cursor.y)\n\t\t\tyCursor = placeDiv(CURSOR_Y, over);\n\n\t\tif (scaleX.ori == 0) {\n\t\t\tvCursor = xCursor;\n\t\t\thCursor = yCursor;\n\t\t}\n\t\telse {\n\t\t\tvCursor = yCursor;\n\t\t\thCursor = xCursor;\n\t\t}\n\n\t\tmouseLeft1 = cursor.left;\n\t\tmouseTop1 = cursor.top;\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tover:   true,\n\t\tleft:   0,\n\t\twidth:  0,\n\t\ttop:    0,\n\t\theight: 0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(SELECT, select.over ? over : under) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts) {\n\t\t\t\tselect[prop] = opts[prop];\n\n\t\t\t\tif (prop in _hideProps)\n\t\t\t\t\tsetStylePx(selectDiv, prop, opts[prop]);\n\t\t\t}\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i) {\n\t\tlet s = series[i];\n\n\t\tif (s.show)\n\t\t\tshowLegend && remClass(legendRows[i], OFF);\n\t\telse {\n\t\t\tshowLegend && addClass(legendRows[i], OFF);\n\n\t\t\tif (showCursor) {\n\t\t\t\tlet pt = cursorOnePt ? cursorPts[0] : cursorPts[i];\n\t\t\t\tpt != null && elTrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, _fire, _pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tif (opts.focus != null)\n\t\t\tsetFocus(i);\n\n\t\tif (opts.show != null) {\n\t\t\tseries.forEach((s, si) => {\n\t\t\t\tif (si > 0 && (i == si || i == null)) {\n\t\t\t\t\ts.show = opts.show;\n\t\t\t\t\ttoggleDOM(si);\n\n\t\t\t\t\tif (mode == 2) {\n\t\t\t\t\t\t_setScale(s.facets[0].scale, null, null);\n\t\t\t\t\t\t_setScale(s.facets[1].scale, null, null);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t_setScale(s.scale, null, null);\n\n\t\t\t\t\tcommit();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_fire !== false && fire(\"setSeries\", i, opts);\n\n\t\t_pub && pubSync(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction setBand(bi, opts) {\n\t\tassign(bands[bi], opts);\n\t}\n\n\tfunction addBand(opts, bi) {\n\t\topts.fill = fnOrSelf(opts.fill || null);\n\t\topts.dir = ifNull(opts.dir, -1);\n\t\tbi = bi == null ? bands.length : bi;\n\t\tbands.splice(bi, 0, opts);\n\t}\n\n\tfunction delBand(bi) {\n\t\tif (bi == null)\n\t\t\tbands.length = 0;\n\t\telse\n\t\t\tbands.splice(bi, 1);\n\t}\n\n\tself.addBand = addBand;\n\tself.setBand = setBand;\n\tself.delBand = delBand;\n\n\tfunction setAlpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif (showCursor && cursorPts[i] != null)\n\t\t\tcursorPts[i].style.opacity = value;\n\n\t\tif (showLegend && legendRows[i])\n\t\t\tlegendRows[i].style.opacity = value;\n\t}\n\n\t// y-distance\n\tlet closestDist;\n\tlet closestSeries;\n\tlet focusedSeries;\n\tconst FOCUS_TRUE  = {focus: true};\n\n\tfunction setFocus(i) {\n\t\tif (i != focusedSeries) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tlet allFocused = i == null;\n\n\t\t\tlet _setAlpha = focus.alpha != 1;\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\tif (mode == 1 || i2 > 0) {\n\t\t\t\t\tlet isFocused = allFocused || i2 == 0 || i2 == i;\n\t\t\t\t\ts._focus = allFocused ? null : isFocused;\n\t\t\t\t\t_setAlpha && setAlpha(i2, isFocused ? 1 : focus.alpha);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfocusedSeries = i;\n\t\t\t_setAlpha && commit();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\tonMouse(mouseleave, legendTable, e => {\n\t\t\tif (cursor._lock)\n\t\t\t\treturn;\n\n\t\t\tsetCursorEvent(e);\n\n\t\t\tif (focusedSeries != null)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t});\n\t}\n\n\tfunction posToVal(pos, scale, can) {\n\t\tlet sc = scales[scale];\n\n\t\tif (can)\n\t\t\tpos = pos / pxRatio - (sc.ori == 1 ? plotTopCss : plotLftCss);\n\n\t\tlet dim = plotWidCss;\n\n\t\tif (sc.ori == 1) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tif (sc.dir == -1)\n\t\t\tpos = dim - pos;\n\n\t\tlet _min = sc._min,\n\t\t\t_max = sc._max,\n\t\t\tpct = pos / dim;\n\n\t\tlet sv = _min + (_max - _min) * pct;\n\n\t\tlet distr = sc.distr;\n\n\t\treturn (\n\t\t\tdistr == 3 ? pow(10, sv) :\n\t\t\tdistr == 4 ? sinh(sv, sc.asinh) :\n\t\t\tdistr == 100 ? sc.bwd(sv) :\n\t\t\tsv\n\t\t);\n\t}\n\n\tfunction closestIdxFromXpos(pos, can) {\n\t\tlet v = posToVal(pos, xScaleKey, can);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = posToVal;\n\tself.valToPos = (val, scale, can) => (\n\t\tscales[scale].ori == 0 ?\n\t\tgetHPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetVPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\tself.setCursor = (opts, _fire, _pub) => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor(null, _fire, _pub);\n\t};\n\n\tfunction setSelH(off, dim) {\n\t\tsetStylePx(selectDiv, LEFT,  select.left = off);\n\t\tsetStylePx(selectDiv, WIDTH, select.width = dim);\n\t}\n\n\tfunction setSelV(off, dim) {\n\t\tsetStylePx(selectDiv, TOP,    select.top = off);\n\t\tsetStylePx(selectDiv, HEIGHT, select.height = dim);\n\t}\n\n\tlet setSelX = scaleX.ori == 0 ? setSelH : setSelV;\n\tlet setSelY = scaleX.ori == 1 ? setSelH : setSelV;\n\n\tfunction syncLegend() {\n\t\tif (showLegend && legend.live) {\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet vals = legend.values[i];\n\n\t\t\t\tlet j = 0;\n\n\t\t\t\tfor (let k in vals)\n\t\t\t\t\tlegendCells[i][j++].firstChild.nodeValue = vals[k];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setLegend(opts, _fire) {\n\t\tif (opts != null) {\n\t\t\tif (opts.idxs) {\n\t\t\t\topts.idxs.forEach((didx, sidx) => {\n\t\t\t\t\tactiveIdxs[sidx] = didx;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (!isUndef(opts.idx))\n\t\t\t\tactiveIdxs.fill(opts.idx);\n\n\t\t\tlegend.idx = activeIdxs[0];\n\t\t}\n\n\t\tif (showLegend && legend.live) {\n\t\t\tfor (let sidx = 0; sidx < series.length; sidx++) {\n\t\t\t\tif (sidx > 0 || mode == 1 && !multiValLegend)\n\t\t\t\t\tsetLegendValues(sidx, activeIdxs[sidx]);\n\t\t\t}\n\n\t\t\tsyncLegend();\n\t\t}\n\n\t\tshouldSetLegend = false;\n\n\t\t_fire !== false && fire(\"setLegend\");\n\t}\n\n\tself.setLegend = setLegend;\n\n\tfunction setLegendValues(sidx, idx) {\n\t\tlet s = series[sidx];\n\t\tlet src = sidx == 0 && xScaleDistr == 2 ? data0 : data[sidx];\n\t\tlet val;\n\n\t\tif (multiValLegend)\n\t\t\tval = s.values(self, sidx, idx) ?? NULL_LEGEND_VALUES;\n\t\telse {\n\t\t\tval = s.value(self, idx == null ? null : src[idx], sidx, idx);\n\t\t\tval = val == null ? NULL_LEGEND_VALUES : {_: val};\n\t\t}\n\n\t\tlegend.values[sidx] = val;\n\t}\n\n\tfunction updateCursor(src, _fire, _pub) {\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\trawMouseLeft1 = mouseLeft1;\n\t\trawMouseTop1 = mouseTop1;\n\n\t\t[mouseLeft1, mouseTop1] = cursor.move(self, mouseLeft1, mouseTop1);\n\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\n\t\tif (showCursor) {\n\t\t\tvCursor && elTrans(vCursor, round(mouseLeft1), 0, plotWidCss, plotHgtCss);\n\t\t\thCursor && elTrans(hCursor, 0, round(mouseTop1), plotWidCss, plotHgtCss);\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1; // works for mode 1 only\n\n\t\tclosestDist = inf;\n\t\tclosestSeries = null;\n\n\t\t// TODO: extract\n\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss;\n\t\tlet yDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = cursor.idx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tlet pt = cursorPts[i];\n\t\t\t\tpt != null && elTrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, src == null && syncOpts.setSeries);\n\n\t\t\tif (legend.live) {\n\t\t\t\tactiveIdxs.fill(idx);\n\t\t\t\tshouldSetLegend = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect.height);\n\n\t\t\tlet mouseXPos, valAtPosX, xPos;\n\n\t\t\tif (mode == 1) {\n\t\t\t\tmouseXPos = scaleX.ori == 0 ? mouseLeft1 : mouseTop1;\n\t\t\t\tvalAtPosX = posToVal(mouseXPos, xScaleKey);\n\t\t\t\tidx = cursor.idx = closestIdx(valAtPosX, data[0], i0, i1);\n\t\t\t\txPos = valToPosX(data[0][idx], scaleX, xDim, 0);\n\t\t\t}\n\n\t\t\t// closest pt values\n\t\t\tlet _ptLft = -10;\n\t\t\tlet _ptTop = -10;\n\t\t\tlet _ptWid = 0;\n\t\t\tlet _ptHgt = 0;\n\t\t\tlet _centered = true;\n\t\t\tlet _ptFill = '';\n\t\t\tlet _ptStroke = '';\n\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tlet idx1  = activeIdxs[i];\n\t\t\t\tlet yVal1 = idx1 == null ? null : (mode == 1 ? data[i][idx1] : data[i][1][idx1]);\n\n\t\t\t\tlet idx2  = cursor.dataIdx(self, i, idx, valAtPosX);\n\t\t\t\tlet yVal2 = idx2 == null ? null : (mode == 1 ? data[i][idx2] : data[i][1][idx2]);\n\n\t\t\t\tshouldSetLegend = shouldSetLegend || yVal2 != yVal1 || idx2 != idx1;\n\n\t\t\t\tactiveIdxs[i] = idx2;\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet xPos2 = idx2 == null ? -10 : idx2 == idx ? xPos : valToPosX(mode == 1 ? data[0][idx2] : data[i][0][idx2], scaleX, xDim, 0);\n\n\t\t\t\t\t// this doesnt really work for state timeline, heatmap, status history (where the value maps to color, not y coords)\n\t\t\t\t\tlet yPos = yVal2 == null ? -10 : valToPosY(yVal2, mode == 1 ? scales[s.scale] : scales[s.facets[1].scale], yDim, 0);\n\n\t\t\t\t\tif (cursorFocus && yVal2 != null) {\n\t\t\t\t\t\tlet mouseYPos = scaleX.ori == 1 ? mouseLeft1 : mouseTop1;\n\t\t\t\t\t\tlet dist = abs(focus.dist(self, i, idx2, yPos, mouseYPos));\n\n\t\t\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t\t\tlet bias = focus.bias;\n\n\t\t\t\t\t\t\tif (bias != 0) {\n\t\t\t\t\t\t\t\tlet mouseYVal = posToVal(mouseYPos, s.scale);\n\n\t\t\t\t\t\t\t\tlet seriesYValSign = yVal2     >= 0 ? 1 : -1;\n\t\t\t\t\t\t\t\tlet mouseYValSign  = mouseYVal >= 0 ? 1 : -1;\n\n\t\t\t\t\t\t\t\t// with a focus bias, we will never cross zero when prox testing\n\t\t\t\t\t\t\t\t// it's either closest towards zero, or closest away from zero\n\t\t\t\t\t\t\t\tif (mouseYValSign == seriesYValSign && (\n\t\t\t\t\t\t\t\t\tmouseYValSign == 1 ?\n\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 >= mouseYVal : yVal2 <= mouseYVal) :  // >= 0\n\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 <= mouseYVal : yVal2 >= mouseYVal)    //  < 0\n\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shouldSetLegend || cursorOnePt) {\n\t\t\t\t\t\tlet hPos, vPos;\n\n\t\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\t\thPos = xPos2;\n\t\t\t\t\t\t\tvPos = yPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\thPos = yPos;\n\t\t\t\t\t\t\tvPos = xPos2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet ptWid, ptHgt, ptLft, ptTop,\n\t\t\t\t\t\t\tptStroke, ptFill,\n\t\t\t\t\t\t\tcentered = true,\n\t\t\t\t\t\t\tgetBBox = points.bbox;\n\n\t\t\t\t\t\tif (getBBox != null) {\n\t\t\t\t\t\t\tcentered = false;\n\n\t\t\t\t\t\t\tlet bbox = getBBox(self, i);\n\n\t\t\t\t\t\t\tptLft = bbox.left;\n\t\t\t\t\t\t\tptTop = bbox.top;\n\t\t\t\t\t\t\tptWid = bbox.width;\n\t\t\t\t\t\t\tptHgt = bbox.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tptLft = hPos;\n\t\t\t\t\t\t\tptTop = vPos;\n\t\t\t\t\t\t\tptWid = ptHgt = points.size(self, i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tptFill = points.fill(self, i);\n\t\t\t\t\t\tptStroke = points.stroke(self, i);\n\n\t\t\t\t\t\tif (cursorOnePt) {\n\t\t\t\t\t\t\tif (i == closestSeries && closestDist <= focus.prox) {\n\t\t\t\t\t\t\t\t_ptLft = ptLft;\n\t\t\t\t\t\t\t\t_ptTop = ptTop;\n\t\t\t\t\t\t\t\t_ptWid = ptWid;\n\t\t\t\t\t\t\t\t_ptHgt = ptHgt;\n\t\t\t\t\t\t\t\t_centered = centered;\n\t\t\t\t\t\t\t\t_ptFill = ptFill;\n\t\t\t\t\t\t\t\t_ptStroke = ptStroke;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlet pt = cursorPts[i];\n\n\t\t\t\t\t\t\tif (pt != null) {\n\t\t\t\t\t\t\t\tcursorPtsLft[i] = ptLft;\n\t\t\t\t\t\t\t\tcursorPtsTop[i] = ptTop;\n\n\t\t\t\t\t\t\t\telSize(pt, ptWid, ptHgt, centered);\n\t\t\t\t\t\t\t\telColor(pt, ptFill, ptStroke);\n\t\t\t\t\t\t\t\telTrans(pt, ceil(ptLft), ceil(ptTop), plotWidCss, plotHgtCss);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if only using single hover point (at cursorPts[0])\n\t\t\t// we have trigger styling at last visible series (once closestSeries is settled)\n\t\t\tif (cursorOnePt) {\n\t\t\t\t// some of this logic is similar to series focus below, since it matches the behavior by design\n\n\t\t\t\tlet p = focus.prox;\n\n\t\t\t\tlet focusChanged = focusedSeries == null ? closestDist <= p : (closestDist > p || closestSeries != focusedSeries);\n\n\t\t\t\tif (shouldSetLegend || focusChanged) {\n\t\t\t\t\tlet pt = cursorPts[0];\n\n\t\t\t\t\tif (pt != null) {\n\t\t\t\t\t\tcursorPtsLft[0] = _ptLft;\n\t\t\t\t\t\tcursorPtsTop[0] = _ptTop;\n\n\t\t\t\t\t\telSize(pt, _ptWid, _ptHgt, _centered);\n\t\t\t\t\t\telColor(pt, _ptFill, _ptStroke);\n\t\t\t\t\t\telTrans(pt, ceil(_ptLft), ceil(_ptTop), plotWidCss, plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\t\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\t\t\t\tlet [xKeySrc, yKeySrc] = src.cursor.sync.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (dragX || dragY) {\n\t\t\t\t\tlet { left, top, width, height } = src.select;\n\n\t\t\t\t\tlet sori = src.scales[xKeySrc].ori;\n\t\t\t\t\tlet sPosToVal = src.posToVal;\n\n\t\t\t\t\tlet sOff, sDim, sc, a, b;\n\n\t\t\t\t\tlet matchingX = xKey != null && matchXKeys(xKey, xKeySrc);\n\t\t\t\t\tlet matchingY = yKey != null && matchYKeys(yKey, yKeySrc);\n\n\t\t\t\t\tif (matchingX && dragX) {\n\t\t\t\t\t\tif (sori == 0) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[xKey];\n\n\t\t\t\t\t\ta = valToPosX(sPosToVal(sOff, xKeySrc),        sc, xDim, 0);\n\t\t\t\t\t\tb = valToPosX(sPosToVal(sOff + sDim, xKeySrc), sc, xDim, 0);\n\n\t\t\t\t\t\tsetSelX(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelX(0, xDim);\n\n\t\t\t\t\tif (matchingY && dragY) {\n\t\t\t\t\t\tif (sori == 1) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[yKey];\n\n\t\t\t\t\t\ta = valToPosY(sPosToVal(sOff, yKeySrc),        sc, yDim, 0);\n\t\t\t\t\t\tb = valToPosY(sPosToVal(sOff + sDim, yKeySrc), sc, yDim, 0);\n\n\t\t\t\t\t\tsetSelY(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\thideSelect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet rawDX = abs(rawMouseLeft1 - rawMouseLeft0);\n\t\t\t\tlet rawDY = abs(rawMouseTop1 - rawMouseTop0);\n\n\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\tlet _rawDX = rawDX;\n\t\t\t\t\trawDX = rawDY;\n\t\t\t\t\trawDY = _rawDX;\n\t\t\t\t}\n\n\t\t\t\tdragX = drag.x && rawDX >= drag.dist;\n\t\t\t\tdragY = drag.y && rawDY >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = rawDX >= uni;\n\t\t\t\t\t\tdragY = rawDY >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (rawDY > rawDX)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tlet p0, p1;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelX(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragY)\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelY(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragX)\n\t\t\t\t\t\tsetSelX(0, xDim);\n\t\t\t\t}\n\n\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\tsetSelX(0, 0);\n\t\t\t\t\tsetSelY(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\tif (src == null) {\n\t\t\tif (_pub) {\n\t\t\t\tif (syncKey != null) {\n\t\t\t\t\tlet [xSyncKey, ySyncKey] = syncOpts.scales;\n\n\t\t\t\t\tsyncOpts.values[0] = xSyncKey != null ? posToVal(scaleX.ori == 0 ? mouseLeft1 : mouseTop1, xSyncKey) : null;\n\t\t\t\t\tsyncOpts.values[1] = ySyncKey != null ? posToVal(scaleX.ori == 1 ? mouseLeft1 : mouseTop1, ySyncKey) : null;\n\t\t\t\t}\n\n\t\t\t\tpubSync(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\t\t\t}\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tlet shouldPub = _pub && syncOpts.setSeries;\n\t\t\t\tlet p = focus.prox;\n\n\t\t\t\tif (focusedSeries == null) {\n\t\t\t\t\tif (closestDist <= p)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (closestDist > p)\n\t\t\t\t\t\tsetSeries(null, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t\telse if (closestSeries != focusedSeries)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (shouldSetLegend) {\n\t\t\tlegend.idx = idx;\n\t\t\tsetLegend();\n\t\t}\n\n\t\t_fire !== false && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tObject.defineProperty(self, 'rect', {\n\t\tget() {\n\t\t\tif (rect == null)\n\t\t\t\tsyncRect(false);\n\n\t\t\treturn rect;\n\t\t},\n\t});\n\n\tfunction syncRect(defer = false) {\n\t\tif (defer)\n\t\t\trect = null;\n\t\telse {\n\t\t\trect = over.getBoundingClientRect();\n\t\t\tfire(\"syncRect\", rect);\n\t\t}\n\t}\n\n\tfunction mouseMove(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\t// Chrome on Windows has a bug which triggers a stray mousemove event after an initial mousedown event\n\t\t// when clicking into a plot as part of re-focusing the browser window.\n\t\t// we gotta ignore it to avoid triggering a phantom drag / setSelect\n\t\t// However, on touch-only devices Chrome-based browsers trigger a 0-distance mousemove before mousedown\n\t\t// so we don't ignore it when mousedown has set the dragging flag\n\t\tif (dragging && e != null && e.movementX == 0 && e.movementY == 0)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, e != null);\n\n\t\tif (e != null)\n\t\t\tupdateCursor(null, true, true);\n\t\telse\n\t\t\tupdateCursor(src, true, false);\n\t}\n\n\tfunction cacheMouse(e, src, _l, _t, _w, _h, _i, initial, snap) {\n\t\tif (rect == null)\n\t\t\tsyncRect(false);\n\n\t\tsetCursorEvent(e);\n\n\t\tif (e != null) {\n\t\t\t_l = e.clientX - rect.left;\n\t\t\t_t = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_l < 0 || _t < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tlet syncOptsSrc = src.cursor.sync;\n\t\t\tlet [xValSrc, yValSrc] = syncOptsSrc.values;\n\t\t\tlet [xKeySrc, yKeySrc] = syncOptsSrc.scales;\n\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\n\t\t\tlet rotSrc = src.axes[0].side % 2 == 1;\n\n\t\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss,\n\t\t\t\tyDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss,\n\t\t\t\t_xDim = rotSrc ? _h : _w,\n\t\t\t\t_yDim = rotSrc ? _w : _h,\n\t\t\t\t_xPos = rotSrc ? _t : _l,\n\t\t\t\t_yPos = rotSrc ? _l : _t;\n\n\t\t\tif (xKeySrc != null)\n\t\t\t\t_l = matchXKeys(xKey, xKeySrc) ? getPos(xValSrc, scales[xKey], xDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_l = xDim * (_xPos/_xDim);\n\n\t\t\tif (yKeySrc != null)\n\t\t\t\t_t = matchYKeys(yKey, yKeySrc) ? getPos(yValSrc, scales[yKey], yDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_t = yDim * (_yPos/_yDim);\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\tlet __l = _l;\n\t\t\t\t_l = _t;\n\t\t\t\t_t = __l;\n\t\t\t}\n\t\t}\n\n\t\tif (snap && (src == null || src.cursor.event.type == mousemove)) {\n\t\t\tif (_l <= 1 || _l >= plotWidCss - 1)\n\t\t\t\t_l = incrRound(_l, plotWidCss);\n\n\t\t\tif (_t <= 1 || _t >= plotHgtCss - 1)\n\t\t\t\t_t = incrRound(_t, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\trawMouseLeft0 = _l;\n\t\t\trawMouseTop0 = _t;\n\n\t\t\t[mouseLeft0, mouseTop0] = cursor.move(self, _l, _t);\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _l;\n\t\t\tmouseTop1 = _t;\n\t\t}\n\t}\n\n\tconst _hideProps = {\n\t\twidth: 0,\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t};\n\n\tfunction hideSelect() {\n\t\tsetSelect(_hideProps, false);\n\t}\n\n\tlet downSelectLeft;\n\tlet downSelectTop;\n\tlet downSelectWidth;\n\tlet downSelectHeight;\n\n\tfunction mouseDown(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = true;\n\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, true, false);\n\n\t\tif (e != null) {\n\t\t\tonMouse(mouseup, doc, mouseUp, false);\n\t\t\tpubSync(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t}\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tdownSelectLeft   = left;\n\t\tdownSelectTop    = top;\n\t\tdownSelectWidth  = width;\n\t\tdownSelectHeight = height;\n\n\t//\thideSelect();\n\t}\n\n\tfunction mouseUp(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, true);\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tlet hasSelect = width > 0 || height > 0;\n\t\tlet chgSelect = (\n\t\t\tdownSelectLeft   != left   ||\n\t\t\tdownSelectTop    != top    ||\n\t\t\tdownSelectWidth  != width  ||\n\t\t\tdownSelectHeight != height\n\t\t);\n\n\t\thasSelect && chgSelect && setSelect(select);\n\n\t\tif (drag.setScale && hasSelect && chgSelect) {\n\t\t//\tif (syncKey != null) {\n\t\t//\t\tdragX = drag.x;\n\t\t//\t\tdragY = drag.y;\n\t\t//\t}\n\n\t\t\tlet xOff = left,\n\t\t\t\txDim = width,\n\t\t\t\tyOff = top,\n\t\t\t\tyDim = height;\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\txOff = top,\n\t\t\t\txDim = height,\n\t\t\t\tyOff = left,\n\t\t\t\tyDim = width;\n\t\t\t}\n\n\t\t\tif (dragX) {\n\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\tposToVal(xOff, xScaleKey),\n\t\t\t\t\tposToVal(xOff + xDim, xScaleKey)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (dragY) {\n\t\t\t\tfor (let k in scales) {\n\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\tif (k != xScaleKey && sc.from == null && sc.min != inf) {\n\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\tposToVal(yOff + yDim, k),\n\t\t\t\t\t\t\tposToVal(yOff, k)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thideSelect();\n\t\t}\n\t\telse if (cursor.lock) {\n\t\t\tcursor._lock = !cursor._lock;\n\t\t\tupdateCursor(src, true, e != null);\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toffMouse(mouseup, doc);\n\t\t\tpubSync(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tsetCursorEvent(e);\n\n\t\tlet _dragging = dragging;\n\n\t\tif (dragging) {\n\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\tlet snapH = true;\n\t\t\tlet snapV = true;\n\t\t\tlet snapProx = 10;\n\n\t\t\tlet dragH, dragV;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tdragH = dragX;\n\t\t\t\tdragV = dragY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdragH = dragY;\n\t\t\t\tdragV = dragX;\n\t\t\t}\n\n\t\t\tif (dragH && dragV) {\n\t\t\t\t// maybe omni corner snap\n\t\t\t\tsnapH = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\tsnapV = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t}\n\n\t\t\tif (dragH && snapH)\n\t\t\t\tmouseLeft1 = mouseLeft1 < mouseLeft0 ? 0 : plotWidCss;\n\n\t\t\tif (dragV && snapV)\n\t\t\t\tmouseTop1 = mouseTop1 < mouseTop0 ? 0 : plotHgtCss;\n\n\t\t\tupdateCursor(null, true, true);\n\n\t\t\tdragging = false;\n\t\t}\n\n\t\tmouseLeft1 = -10;\n\t\tmouseTop1 = -10;\n\n\t\tactiveIdxs.fill(null);\n\n\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\tupdateCursor(null, true, true);\n\n\t\tif (_dragging)\n\t\t\tdragging = _dragging;\n\t}\n\n\tfunction dblClick(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tsetCursorEvent(e);\n\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tpubSync(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\tfunction syncPxRatio() {\n\t\taxes.forEach(syncFontSize);\n\t\t_setSize(self.width, self.height, true);\n\t}\n\n\ton(dppxchange, win, syncPxRatio);\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents.mousedown = mouseDown;\n\tevents.mousemove = mouseMove;\n\tevents.mouseup = mouseUp;\n\tevents.dblclick = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tlet seriesIdxMatcher = syncOpts.match[2];\n\t\tidx = seriesIdxMatcher(self, src, idx);\n\t\tidx != -1 && setSeries(idx, opts, true, false);\n\t};\n\n\tif (showCursor) {\n\t\tonMouse(mousedown,  over, mouseDown);\n\t\tonMouse(mousemove,  over, mouseMove);\n\t\tonMouse(mouseenter, over, e => {\n\t\t\tsetCursorEvent(e);\n\t\t\tsyncRect(false);\n\t\t});\n\t\tonMouse(mouseleave, over, mouseLeave);\n\n\t\tonMouse(dblclick, over, dblClick);\n\n\t\tcursorPlots.add(self);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (deferHooks)\n\t\t\thooksQueue.push([evName, a1, a2]);\n\t\telse {\n\t\t\tif (evName in hooks) {\n\t\t\t\thooks[evName].forEach(fn => {\n\t\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst seriesIdxMatcher = (self, src, srcSeriesIdx) => srcSeriesIdx;\n\n\tconst syncOpts = assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tfilters: {\n\t\t\tpub: retTrue,\n\t\t\tsub: retTrue,\n\t\t},\n\t\tscales: [xScaleKey, series[1] ? series[1].scale : null],\n\t\tmatch: [retEq, retEq, seriesIdxMatcher],\n\t\tvalues: [null, null],\n\t}, cursor.sync);\n\n\tif (syncOpts.match.length == 2)\n\t\tsyncOpts.match.push(seriesIdxMatcher);\n\n\tcursor.sync = syncOpts;\n\n\tconst syncKey = syncOpts.key;\n\n\tconst sync = _sync(syncKey);\n\n\tfunction pubSync(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.pub(type, src, x, y, w, h, i))\n\t\t\tsync.pub(type, src, x, y, w, h, i);\n\t}\n\n\tsync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.sub(type, src, x, y, w, h, i))\n\t\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\tself.pub = pub;\n\n\tfunction destroy() {\n\t\tsync.unsub(self);\n\t\tcursorPlots.delete(self);\n\t\tmouseListeners.clear();\n\t\toff(dppxchange, win, syncPxRatio);\n\t\troot.remove();\n\t\tlegendTable?.remove(); // in case mounted outside of root\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\tshouldSetSelect = select.show && (select.width > 0 || select.height > 0);\n\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\t_setSize(opts.width, opts.height);\n\t}\n\n\tseries.forEach(initSeries);\n\n\taxes.forEach(initAxis);\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.fmtNum = fmtNum;\nuPlot.rangeNum = rangeNum;\nuPlot.rangeLog = rangeLog;\nuPlot.rangeAsinh = rangeAsinh;\nuPlot.orient   = orient;\nuPlot.pxRatio = pxRatio;\n\n{\n\tuPlot.join = join;\n}\n\n{\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\nuPlot.sync = _sync;\n\n{\n\tuPlot.addGap = addGap;\n\tuPlot.clipGaps = clipGaps;\n\n\tlet paths = uPlot.paths = {\n\t\tpoints,\n\t};\n\n\t(paths.linear  = linear);\n\t(paths.stepped = stepped);\n\t(paths.bars    = bars);\n\t(paths.spline  = monotoneCubic);\n}\n\nexport { uPlot as default };\n", "import uPlot from 'uplot'\n\nlet chart = null;\n\nfunction paths(u, sidx, i0, i1) {\n  const s = u.series[sidx];\n  const xdata = u.data[0];\n  const ydata = u.data[sidx];\n  const scaleX = 'x';\n  const scaleY = s.scale;\n\n  const stroke = new Path2D();\n\n  const x_width = Math.abs((u.valToPos(xdata[0], scaleX, true) - u.valToPos(xdata[1], scaleX, true)) / 2);\n\n  stroke.moveTo(\n    Math.round(u.valToPos(xdata[0], scaleX, true)),\n    Math.round(u.valToPos(ydata[0], scaleY, true))\n  );\n\n  for (let i = i0; i < i1; i++) {\n    let x0 = Math.round(u.valToPos(xdata[i], scaleX, true));\n    let y0 = Math.round(u.valToPos(ydata[i], scaleY, true));\n    let x1 = Math.round(u.valToPos(xdata[i + 1], scaleX, true));\n    let y1 = Math.round(u.valToPos(ydata[i + 1], scaleY, true));\n\n    stroke.lineTo(x0 - x_width, y0);\n    stroke.lineTo(x1 - x_width, y0);\n\n    if (i == i1 - 1) {\n      stroke.lineTo(x1 - x_width, y1);\n      stroke.lineTo(x1, y1);\n    }\n  }\n\n  const fill = new Path2D(stroke);\n\n  let minY = Math.round(u.valToPos(u.scales[scaleY].min, scaleY, true));\n  let minX = Math.round(u.valToPos(u.scales[scaleX].min, scaleX, true));\n  let maxX = Math.round(u.valToPos(u.scales[scaleX].max, scaleX, true));\n\n  fill.lineTo(maxX, minY);\n  fill.lineTo(minX, minY);\n\n  return {\n    stroke,\n    fill,\n  };\n}\n\nfunction safe_to_fixed(number, decimals) {\n  return number && number.toFixed(decimals)\n}\n\nfunction make_opts(parent, scale) {\n  let rect = { width: parent.clientWidth, height: 600 };\n\n  let scaler = null;\n  if (scale == \"Linear\") {\n    scaler = (x) => x && x\n  } else if (scale == \"Log10\") {\n    scaler = (x) => x && Math.pow(10, x)\n  } else if (scale == \"Log2\") {\n    scaler = (x) => x && Math.pow(2, x)\n  }\n\n  return {\n    id: parent.id + \"-chart\",\n    width: rect.width,\n    height: rect.height,\n    labelSize: 10,\n    labelFont: \"bold 8px Arial\",\n    ticks: { show: false },\n    points: { show: false },\n    font: \"8px Arial\",\n    padding: [null, 30, null, 30],\n    series: [\n      { value: '{HH}:{mm}:{ss}' },\n      {\n        label: \"P99\",\n        stroke: \"rgb(155, 214, 206)\",\n        value: (self, rawValue) => safe_to_fixed(scaler(rawValue), 3) + \"ms\",\n        fill: \"rgb(155, 214, 206, 0.5 )\",\n        paths: paths,\n        scale: \"ms\"\n      },\n      {\n        label: \"P90\",\n        stroke: \"rgb(79, 169, 184)\",\n        value: (self, rawValue) => safe_to_fixed(scaler(rawValue), 3) + \"ms\",\n        fill: \"rgb(79, 169, 184, 0.5)\",\n        paths: paths,\n        scale: \"ms\"\n      },\n      {\n        label: \"P50\",\n        stroke: \"rgb(2, 88, 115)\",\n        value: (self, rawValue) => safe_to_fixed(scaler(rawValue), 3) + \"ms\",\n        fill: \"rgb(2, 88, 115, 0.5)\",\n        paths: paths,\n        scale: \"ms\"\n      },\n      {\n        label: \"count\",\n        stroke: \"rgb(30, 30, 30)\",\n        value: (self, rawValue) => scaler(rawValue) + \"cps\",\n        scale: \"calls\"\n      }\n    ],\n    axes: [\n      {\n        values: [\n          [1, \"{HH}:{mm}:{ss}\", null, null, null, null, null, null, 1],]\n      },\n      {\n        scale: \"ms\",\n        grid: { show: false },\n        values: (u, vals, space) => vals.map((val) => safe_to_fixed(scaler(val), 3) + \"ms\")\n      },\n      {\n        side: 1,\n        values: (u, vals, space) => vals.map((val) => safe_to_fixed(scaler(val), 1) + \" calls\"),\n        scale: \"calls\",\n        grid: { show: false },\n      },\n    ]\n  };\n}\n\nexport class HistoChart {\n  constructor(chartEl, data, scale) {\n    let opts = make_opts(chartEl, scale)\n    this.uplotChart = new uPlot(opts, data, chartEl);\n  }\n\n  updateData(quantile_data, scale) {\n    this.uplotChart.setData(quantile_data, scale)\n  }\n}\n\nlet scale = \"\";\n\nexport const ChartData = {\n  mounted() {\n    let chartEl = this.el.parentElement.querySelector('.chart');\n    scale = JSON.parse(chartEl.dataset.scale);\n    let quantile_data = JSON.parse(chartEl.dataset.quantile);\n    this.chart = new HistoChart(chartEl, quantile_data, scale);\n  },\n  updated() {\n    let chartEl = this.el.parentElement.querySelector('.chart');\n    let new_scale = JSON.parse(chartEl.dataset.scale);\n\n    if (scale == new_scale) {\n      let quantile_data = JSON.parse(chartEl.dataset.quantile);\n      this.chart.updateData(quantile_data, scale);\n    } else {\n      this.mounted();\n    }\n  }\n}"],
  "mappings": "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",
  "names": ["require_topbar_min", "__commonJSMin", "exports", "module", "window", "document", "repaint", "canvas", "options", "ctx", "stop", "lineGradient", "currentProgress", "showing", "progressTimerId", "fadeTimerId", "delayTimerId", "topbar", "opts", "key", "handler", "type", "elem", "loop", "to", "import_topbar", "pre", "UPLOT", "ORI_HZ", "ORI_VT", "TITLE", "WRAP", "UNDER", "OVER", "AXIS", "OFF", "SELECT", "CURSOR_X", "CURSOR_Y", "CURSOR_PT", "LEGEND", "LEGEND_LIVE", "LEGEND_INLINE", "LEGEND_SERIES", "LEGEND_MARKER", "LEGEND_LABEL", "LEGEND_VALUE", "WIDTH", "HEIGHT", "TOP", "BOTTOM", "LEFT", "RIGHT", "hexBlack", "transparent", "mousemove", "mousedown", "mouseup", "mouseenter", "mouseleave", "dblclick", "resize", "scroll", "change", "dppxchange", "LEGEND_DISP", "domEnv", "doc", "win", "nav", "pxRatio", "query", "setPxRatio", "_pxRatio", "off", "on", "addClass", "el", "c", "cl", "remClass", "setStylePx", "name", "value", "placeTag", "tag", "cls", "targ", "refEl", "placeDiv", "xformCache", "elTrans", "xPos", "yPos", "xMax", "yMax", "xform", "xformOld", "colorCache", "elColor", "background", "borderColor", "newColor", "oldColor", "sizeCache", "elSize", "newWid", "newHgt", "centered", "newSize", "oldSize", "evOpts", "evOpts2", "ev", "cb", "capt", "closestIdx", "num", "arr", "lo", "hi", "mid", "bitwise", "floor", "makeIndexOfs", "predicate", "data", "_i0", "_i1", "i0", "i1", "i", "notNullish", "v", "isPositive", "nonNullIdxs", "positiveIdxs", "getMinMax", "sorted", "log", "getEdgeIdxs", "_min", "_max", "inf", "rangeLog", "min", "max", "base", "fullMags", "minSign", "sign", "maxSign", "logFn", "log10", "log2", "growMinAbs", "ceil", "growMaxAbs", "minExp", "abs", "maxExp", "minIncr", "pow", "maxIncr", "roundDec", "incrRoundDn", "incrRoundUp", "rangeAsinh", "minMax", "rangePad", "autoRangePart", "_eqRangePart", "_eqRange", "rangeNum", "mult", "extra", "isObj", "_rangeNum", "ifNull", "lh", "rh", "hasData", "idx0", "idx1", "cfg", "cmin", "cmax", "padMin", "padMax", "hardMin", "hardMax", "softMin", "softMax", "softMinMode", "softMaxMode", "delta", "deltaMag", "scalarMax", "scalarMag", "scalarMagDelta", "nonZeroDelta", "mag", "_padMin", "_newMin", "_softMin", "minLim", "_padMax", "_newMax", "_softMax", "maxLim", "numFormatter", "fmtNum", "val", "M", "PI", "round", "sinh", "linthresh", "asinh", "numIntDigits", "x", "clamp", "isFn", "fnOrSelf", "noop", "retArg0", "_0", "retArg1", "_1", "retNull", "_", "retTrue", "retEq", "a", "b", "regex6", "fixFloat", "isInt", "fixedDec", "str", "match", "len", "exp", "incrRound", "incr", "dec", "p", "guessDec", "genIncrs", "mults", "incrs", "multDec", "expa", "_incr", "EMPTY_OBJ", "EMPTY_ARR", "nullNullTuple", "isArr", "isUndef", "isStr", "is", "fastIsObj", "TypedArray", "__proto__", "copy", "o", "_isObj", "out", "k", "assign", "args", "src", "key", "NULL_REMOVE", "NULL_RETAIN", "NULL_EXPAND", "nullExpand", "yVals", "nullIdxs", "alignedLen", "xi", "lastNullIdx", "nullIdx", "join", "tables", "nullModes", "allHeadersSame", "table", "isAsc", "sortCols", "xVals", "ti", "xs", "xIdxs", "t", "si", "ys", "nullMode", "yVal", "alignedIdx", "microTask", "fn", "head", "rlen", "idxs", "table2", "row", "row2", "j", "vals0", "len0", "vals1", "vals", "samples", "firstIdx", "lastIdx", "stride", "prevVal", "months", "days", "slice3", "days3", "months3", "engNames", "zeroPad2", "int", "zeroPad3", "subs", "d", "names", "h", "fmtDate", "tpl", "parts", "R", "m", "localTz", "tzDate", "date", "tz", "date2", "onlyWhole", "allMults", "decIncrs", "oneIncrs", "wholeIncrs", "numIncrs", "NL", "yyyy", "NLyyyy", "md", "NLmd", "NLmdyy", "aa", "hmm", "hmmaa", "NLhmmaa", "ss", "genTimeStuffs", "ms", "s", "mo", "y", "timeIncrs", "_timeAxisStamps", "timeAxisSplits", "self", "axisIdx", "scaleMin", "scaleMax", "foundIncr", "foundSpace", "splits", "isYr", "isMo", "minDate", "minDateTs", "minMin", "mkDate", "minMinTs", "moIncr", "yrIncr", "split", "splitDate", "baseYear", "baseMonth", "next", "offs", "incr0", "tzOffset", "date0", "prevHour", "incrHours", "minSpace", "pctSpace", "expectedHour", "dstShift", "prevSplit", "timeIncrsMs", "_timeAxisStampsMs", "timeAxisSplitsMs", "timeIncrsS", "_timeAxisStampsS", "timeAxisSplitsS", "timeAxisStamps", "stampCfg", "timeAxisVals", "stamps", "prevYear", "prevMnth", "prevDate", "prevMins", "prevSecs", "newYear", "newMnth", "newDate", "newHour", "newMins", "newSecs", "stamp", "timeAxisVal", "dateTpl", "timeSeriesStamp", "_timeSeriesStamp", "timeSeriesVal", "seriesIdx", "dataIdx", "legendStroke", "legendFill", "legendOpts", "cursorPointShow", "pt", "size", "mar", "width", "cursorPointFill", "sp", "cursorPointStroke", "cursorPointSize", "moveTuple", "cursorMove", "mouseLeft1", "mouseTop1", "filtBtn0", "handle", "onlyTarg", "e", "filtTarg", "cursorOpts", "valPos", "curPos", "axisLines", "grid", "ticks", "border", "font", "labelFont", "lineGap", "xAxisOpts", "numSeriesLabel", "timeSeriesLabel", "xSeriesOpts", "numAxisVals", "numAxisSplits", "forceMin", "numDec", "logAxisSplits", "logBase", "nextMagIncr", "asinhAxisSplits", "posSplits", "zero", "RE_ALL", "RE_12357", "RE_125", "RE_1", "_filt", "distr", "re", "keepMod", "log10AxisValsFilt", "axis", "scaleKey", "sc", "valToPos", "_10", "magSpace", "log2AxisValsFilt", "numSeriesVal", "yAxisOpts", "ptDia", "dia", "seriesPointsShow", "scale", "xData", "p0", "p1", "dim", "maxPts", "facet", "gaps", "nullGaps", "xySeriesOpts", "ySeriesOpts", "clampScale", "xScaleOpts", "yScaleOpts", "syncs", "_sync", "opts", "plot", "type", "w", "BAND_CLIP_FILL", "BAND_CLIP_STROKE", "orient", "u", "mode", "series", "scales", "bbox", "dx", "dy", "sx", "sy", "l", "V", "moveToH", "lineToH", "rectH", "arcH", "bezierCurveToH", "moveToV", "lineToV", "rectV", "arcV", "bezierCurveToV", "bandFillClipDirs", "fillDir", "clipDirs", "bands", "seriesFillTo", "dataMin", "dataMax", "bandFillDir", "clipBandLine", "strokePath", "clipDir", "dataX", "dataY", "scaleX", "scaleY", "valToPosX", "valToPosY", "xOff", "yOff", "xDim", "yDim", "pxRound", "dir", "lineTo", "frIdx", "toIdx", "x0", "y0", "x1", "yLimit", "clip", "clipGaps", "ori", "plotLft", "plotTop", "plotWid", "plotHgt", "rect", "prevGapEnd", "g", "maxStrokeWidth", "addGap", "fromX", "toX", "prevGap", "findGaps", "pixelForX", "align", "fr", "to", "frPx", "toPx", "fri2", "toi2", "pxRoundGen", "pxAlign", "moveTo", "arcTo", "y1", "x2", "y2", "r", "endRad", "baseRad", "startAngle", "endAngle", "bp1x", "bp1y", "bp2x", "bp2y", "p2x", "p2y", "points", "filtIdxs", "arc", "rad", "fill", "lft", "top", "wid", "hgt", "drawPoint", "pi", "_drawAcc", "stroke", "accX", "minY", "maxY", "inY", "outY", "drawAccH", "drawAccV", "linear", "alignGaps", "pixelForY", "drawAcc", "_paths", "hasGap", "xForPixel", "pos", "drawnAtX", "idx0px", "idx1px", "nextAccXVal", "xVal", "bandClipDir", "fillToVal", "fillToY", "frX", "stepped", "ascDesc", "extend", "left", "prevYPos", "firstXPos", "prevXPos", "firstXPosExt", "yVal1", "prevXPosExt", "fillTo", "halfStroke", "startsOffset", "endsOffset", "findColWidth", "colWid", "prevIdx", "minDelta", "bars", "_extraGap", "ro", "radiusFn", "gapFactor", "_maxWidth", "_minWidth", "disp", "_each", "dispFills", "dispStrokes", "_align", "extraGap", "maxWidth", "minWidth", "valRadius", "baseRadius", "_dirX", "each", "band", "xShift", "barWid", "fullGap", "strokeWidth", "multiPath", "fillColors", "fillPaths", "strokeColors", "strokePaths", "color", "pct", "sizes", "insetStroke", "rawBarWid", "dataY0", "radVal", "radBase", "yVal0", "btm", "barHgt", "rv", "rb", "splineInterp", "interp", "bezierCurveTo", "xCoords", "yCoords", "monotoneCubic", "_monotoneCubic", "n", "path", "ds", "dys", "dxs", "cursorPlots", "invalidateRects", "uPlot", "linearPath", "pointsPath", "setDefaults", "xo", "yo", "initY", "setDefault", "setDefaults2", "xyo", "snapNumX", "snapTimeX", "snapNumY", "snapLogY", "snapLogX", "snapAsinhY", "snapAsinhX", "findIncr", "minVal", "maxVal", "intDigits", "incrIdx", "pxRatioFont", "fontSize", "fontSizeCss", "syncFontSize", "f", "then", "getHPos", "getVPos", "getPos", "ready", "root", "title", "can", "ctx", "wrap", "over", "mouseLeft0", "mouseTop0", "drag", "under", "axes", "xScaleKey", "drawOrderMap", "drawAxesGrid", "drawSeries", "drawOrder", "initValToPct", "getVal", "_val", "initScale", "scaleOpts", "isTime", "rn", "rangeIsArr", "xScaleDistr", "pendScales", "_tzDate", "ts", "_fmtDate", "_timeAxisSplits", "_timeAxisVals", "_timeSeriesVal", "activeIdxs", "legend", "cursor", "showLegend", "showCursor", "markers", "legendTable", "legendHead", "legendBody", "legendRows", "legendCells", "legendCols", "multiValLegend", "NULL_LEGEND_VALUES", "getMultiVals", "son", "soff", "initLegendRow", "cells", "label", "indic", "text", "onMouse", "setCursorEvent", "isolate", "setSeries", "syncOpts", "cursorFocus", "FOCUS_TRUE", "mouseListeners", "targListeners", "listener", "offMouse", "fullWidCss", "fullHgtCss", "plotWidCss", "plotHgtCss", "plotLftCss", "plotTopCss", "_plotLftCss", "_plotTopCss", "_plotWidCss", "_plotHgtCss", "shouldSetScales", "shouldSetSize", "shouldConvergeSize", "shouldSetCursor", "shouldSetSelect", "shouldSetLegend", "_setSize", "height", "force", "calcSize", "resetYSeries", "commit", "calcPlotRect", "calcAxesRects", "bb", "CYCLE_LIMIT", "convergeSize", "converged", "cycleNum", "axesConverged", "axesCalc", "paddingConverged", "paddingCalc", "setSize", "hasTopAxis", "hasBtmAxis", "hasRgtAxis", "hasLftAxis", "side", "_size", "isVt", "labelSize", "fullSize", "sidesWithAxes", "_padding", "off1", "off2", "off3", "off0", "incrOffset", "hov", "skip", "prox", "bias", "cursorIdx", "valAtPosX", "idx2", "_prox", "withProx", "cursorLft", "xValues", "yValues", "nonNullLft", "nonNullRgt", "lftPos", "rgtPos", "lftDelta", "rgtDelta", "focus", "cursorOnePt", "cursorPts", "cursorPtsLft", "cursorPtsTop", "initCursorPt", "initSeries", "sv", "_ptDia", "rowCells", "fire", "addSeries", "delSeries", "tr", "initAxis", "av", "autoPadSide", "padding", "dataLen", "data0", "viaAutoScaleX", "setData", "_data", "_resetScales", "scaleData", "_data0", "xsc", "autoScaleX", "_setScale", "ctxStroke", "ctxFill", "ctxWidth", "ctxDash", "ctxJoin", "ctxCap", "ctxFont", "ctxAlign", "ctxBaseline", "ctxAlpha", "setCtxStyle", "dash", "cap", "setFontStyle", "baseline", "accScale", "wsc", "psc", "AUTOSCALE", "setScales", "wipScales", "xFacet", "yFacet", "yScaleKey", "yData", "wscx", "wscy", "changed", "anyChanged", "getOuterIdxs", "ydata", "shouldAlpha", "cacheStrokeFill", "_ctxAlpha", "_idxs", "drawPath", "_gaps", "show", "_points", "gapsClip", "flags", "strokeStyle", "fillStyle", "boundsClip", "offset", "_pxAlign", "strokeFill", "fillStroke", "lineWidth", "lineDash", "lineCap", "fillPath", "didStrokeFill", "bi", "lowerEdge", "lowerData", "bandClip", "gapsClip2", "_fillStyle", "CLIP_FILL_STROKE", "doFill", "doStroke", "getIncrSpace", "fullDim", "incrSpace", "drawOrthoLines", "filts", "pos0", "pos1", "_space", "_splits", "values", "_p", "shiftDir", "shiftAmt", "baseLpos", "_label", "plotDim", "plotOff", "_tickSize", "tickSize", "axisGap", "angle", "basePos", "finalPos", "textAlign", "textBaseline", "lineHeight", "canOffs", "_values", "_parts", "queuedCommit", "deferHooks", "hooksQueue", "flushHooks", "_commit", "batch", "_deferHooks", "_el", "_show", "_pos", "posOffset", "syncRect", "pctWid", "pctHgt", "vCursor", "hCursor", "select", "prop", "_hideProps", "selectDiv", "setSelect", "updateCursor", "setLegend", "rebuildPaths", "recalcAxes", "setScale", "xCursor", "yCursor", "rawMouseLeft0", "rawMouseTop0", "rawMouseLeft1", "rawMouseTop1", "dragging", "dragX", "dragY", "_fire", "toggleDOM", "_pub", "setFocus", "pubSync", "setBand", "addBand", "delBand", "setAlpha", "closestDist", "closestSeries", "focusedSeries", "allFocused", "_setAlpha", "i2", "isFocused", "posToVal", "closestIdxFromXpos", "setSelH", "setSelV", "setSelX", "setSelY", "syncLegend", "didx", "sidx", "setLegendValues", "idx", "noDataInRange", "mouseXPos", "_ptLft", "_ptTop", "_ptWid", "_ptHgt", "_centered", "_ptFill", "_ptStroke", "yVal2", "xPos2", "mouseYPos", "dist", "mouseYVal", "seriesYValSign", "mouseYValSign", "hPos", "vPos", "ptWid", "ptHgt", "ptLft", "ptTop", "ptStroke", "ptFill", "getBBox", "focusChanged", "xKey", "yKey", "matchXKeys", "matchYKeys", "xKeySrc", "yKeySrc", "sdrag", "sori", "sPosToVal", "sOff", "sDim", "matchingX", "matchingY", "hideSelect", "rawDX", "rawDY", "_rawDX", "uni", "syncKey", "xSyncKey", "ySyncKey", "shouldPub", "defer", "mouseMove", "_l", "_t", "_w", "_h", "_i", "cacheMouse", "initial", "snap", "syncOptsSrc", "xValSrc", "yValSrc", "rotSrc", "_xDim", "_yDim", "_xPos", "_yPos", "__l", "downSelectLeft", "downSelectTop", "downSelectWidth", "downSelectHeight", "mouseDown", "mouseUp", "hasSelect", "chgSelect", "mouseLeave", "_dragging", "snapH", "snapV", "snapProx", "dragH", "dragV", "dblClick", "syncPxRatio", "events", "seriesIdxMatcher", "hooks", "evName", "a1", "a2", "srcSeriesIdx", "sync", "pub", "destroy", "_init", "paths", "paths", "u", "sidx", "i0", "i1", "s", "xdata", "ydata", "scaleX", "scaleY", "stroke", "x_width", "i", "x0", "y0", "x1", "y1", "fill", "minY", "minX", "maxX", "safe_to_fixed", "number", "decimals", "make_opts", "parent", "scale", "rect", "scaler", "x", "self", "rawValue", "vals", "space", "val", "HistoChart", "chartEl", "data", "opts", "uPlot", "quantile_data", "ChartData", "new_scale", "socketPath", "csrfToken", "Hooks", "ChartData", "liveSocket", "topbar", "info"]
}
